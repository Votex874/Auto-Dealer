/*zlbolt.min.js generated at 2018-09-07 15:46:21.282879*/
;Zlbolt=function()
{var self=this;var version='1.22.19';console.log('ZLBolt (version: '+version+')');var clientId,server,estimatedTime,cloudIp,instanceUsesSSL,clientToken,instanceManagerPingLoop,checkInstanceRetryHandle,prCodes,car,lastCamera,connectionQuality=-1,qualityCheckLoop,directMessageDeprecatedWarningSent,streamOutput,options,cameraData,mttCameraControlsEnabled,audiCode,audiCodeSent=false;var priv={mouseState:{position:null,mouseDown:false},mouseWheelZoom:null,moveCamDebugTime:0,initTime:Date.now()};this.streamOptions={doorAnim:{icon:'doors',handler:'triggerAnimation',param:'Doors'},showCameras:{icon:'camera',handler:'toggleCameraOptions'}};this.streamOptionsCamera={Interior:{param:'Interior',position:[335,185],rotation:-10},InteriorLeft:{param:'InteriorLeft',position:[330,135],rotation:-60},InteriorStatic:{param:'InteriorStatic',position:[290,147],rotation:0},Dynamic:{param:'Dynamic',position:[460,260],rotation:225},Normal:{param:'Normal',position:[270,222],rotation:-45},High:{param:'High',position:[155,30],rotation:35},FlyCam:{param:'FlyCam',position:[85,240],rotation:-30},};this.cameraAnimOverrides={InteriorSide_L0L:['DoorFR','0'],InteriorSide_L0R:['DoorFL','0']};this.animStates={};this.showingCameraOptions=false;self.cameraMoveFast=false;self.rightHandDrive=false;self.leftHandDrive=true;setupConsoleLogShim();this.mttCameraControlsEnabled=false;this.mttSupportsRelativeMovement=false;this.cloudOrbitCamConfig=null;this.streamMetrics={}
this.instanceURL=function(){if(self.instanceUsesSSL){return'https://'+String(self.cloudIp);}
else{return'http://'+String(self.cloudIp);}}
this.identifier='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});priv.checkStreamIsActive=function(context,callback){var error;if(!self.connectFlag){error='Stream not active (connect not called)';}
if(!error){return true;}
setTimeout(function(){var err={message:error,context:context};callback&&callback(err);self.onError&&self.onError(err);},0);return false;};(function(){try{var x='testing_string';window.localStorage.setItem(x,x);window.localStorage.removeItem(x);window.storage=window.localStorage;}
catch(e){window.storage={data:{},setItem:function(key,value){window.storage.data[key]=String(value);},getItem:function(key){return window.storage.data[key];},removeItem:function(key){delete window.storage.data[key];},clear:function(){window.storage.data={};},};console.log('Falling back to temporary options storage');}})();if(window.storage&&window.storage.getItem(prCodes))
{try{prCodes=JSON.parse(storage.prCodes)?JSON.parse(storage.prCodes):[];}catch(parseException)
{console.log("Bad prCodes detected: "+storage.prCodes);console.log(parseException);}}
this.setLocalClientId=function(clientId,requestHash)
{window.storage.setItem("clientIdKey",clientId);window.storage.setItem("clientIdTime",Date.now());window.storage.setItem("clientRequestHash",requestHash);}
this.getLocalClientId=function(requestHash,setupCamera)
{var clientId=window.storage.getItem("clientIdKey")
var setAt=window.storage.getItem("clientIdTime")
var lastCam=window.storage.getItem("lastCamera")
var previousRequestHash=window.storage.getItem("clientRequestHash")
if((Date.now()-setAt<60000)&&(requestHash==previousRequestHash)&&(lastCam==setupCamera))
{return clientId}
else{if(requestHash!=previousRequestHash){console.log("Refusing to attempt reconnect, request details have changed ("+previousRequestHash+" -> "+requestHash+")")}
this.setLocalClientId(null,null)
return null}}
this.cleanLocalStorage=function()
{window.storage.removeItem("clientIdKey");window.storage.removeItem("clientIdTime");window.storage.removeItem("clientRequestHash");window.storage.removeItem("instanceManager");window.storage.removeItem("lastCamera");}
this.isSupported=function(callback)
{setTimeout(function()
{callback&&callback(null,{stream:true});},0);};this.createStream=function(data)
{self.instanceUsesSSL=data.instance.secureTransport;self.cloudIp=data.instance.ip;console.log("Client associated to instance: "+self.cloudIp);if(self.instanceUsesSSL){console.log("Using secure transport to instance");}
attemptAudiCodeSubmission();if(!self.options.noRender){Zlbolt.Outputs.getSupportedOutput(self,self.cloudIp,self.instanceUsesSSL,self.clientToken,self.options,function(inst){self.streamOutput=inst;if(!self.streamOutput){console.warn('[checkInstance] Failed to find a supported output method.');return;}
self.streamOutput.connect(self.cloudIp,self.instanceUsesSSL,self.clientToken);setLoadingScreenState(false,function(){self.buildStreamOptionsDisplay(document.getElementById(self.options.parent));setStreamIdleMonitorState(true);setOrphanedParentMonitorState(true);if(self.options.showDownloadButton)
{$container=$('#'+self.options.parent);buildImageDownloadButton($container);}
if(self.options.overlayOptions.buildOverlay){$container=$('#'+self.options.parent);self.enableInstreamMenu();}
self.autoUpdateResize();self.onStreamReady&&self.onStreamReady();});});}
else{self.onStreamReady&&self.onStreamReady();}};this.enableInstreamMenu=function(spriteSheetURL)
{$container=$('#'+self.options.parent);Zlbolt.buildOverlay($container,spriteSheetURL);};this.disableInstreamMenu=function()
{$('#zl-overlay-main-buttons-list').remove();};this.setInstream=function(enabled,menu_style)
{if(enabled){$('#zl-overlay-main-buttons-list').remove();$(".nm-ave-animation-selector-wrapper").hide()
var spritesheet=menu_style=="white"?"img/extra-buttons/alternate_sheet.png":"img/extra-buttons/combined_sheet.png";self.enableInstreamMenu(spritesheet);}
else{self.disableInstreamMenu();$(".nm-ave-animation-selector-wrapper").show();}}
this.checkQuality=function()
{if(!self.cloudIp){self.connectionQuality=-1;self.instancePingFailureCount=0;self.lastInstanceTimestamp=0;return;}
var pingStartTime=(new Date()).getTime();if(self.pingTime>=500){self.connectionQuality=3;}
else if(self.pingTime>=350){self.connectionQuality=2;}
else if(self.pingTime>=150){self.connectionQuality=1;}
else if(self.pingTime>=0){self.connectionQuality=0;}
else if(self.pingTime==-2){self.connectionQuality=-2;}
else{self.connectionQuality=-1;}
var data={};if(self.pingTime){data.pingTime=self.pingTime;}
if(self.connectionQuality!==undefined){data.connectionQuality=self.connectionQuality;}
$.ajax({url:self.instanceURL()+'/zl/tools/ping',headers:{'x-zl-client-token':self.clientToken},dataType:"json",data:data,cache:false,success:function(data)
{self.pingTime=(new Date()).getTime()-pingStartTime;self.lastInstanceTimestamp=data.timestamp;self.instancePingFailureCount=0;},error:function()
{self.pingTime=-2;self.instancePingFailureCount++;},timeout:1000})};this.pingIM=function()
{var q={clientId:self.clientId,identifier:self.identifier};if(connectionQuality!=-1){q.connectionQuality=self.connectionQuality;q.lastInstanceTimestamp=self.lastInstanceTimestamp;q.instancePingFailureCount=self.instancePingFailureCount;}
$.ajax({type:'POST',url:self.options.instanceManager+'/api/pingFromClient',data:q,success:function(data)
{if(data.instance)
{window.storage.setItem("cloudIP",data.instance.ip);}
self.setLocalClientId(self.clientId,self.requestHash);imPingFailCount=0;if(self.cloudIp&&(!data.instance||data.instance.ip!=self.cloudIp))
{console.log("Client disassociated from instance: "+self.cloudIp)
self.instancePingFailureCount=0;self.lastInstanceTimestamp=0;self.cloudIp=null}
if(data.instance&&!self.cloudIp)
{self.animStates={};$("#"+self.options.parent).html("")
self.createStream(data)}},error:function()
{if(++self.imPingFailCount==6)
{self.streamOutput&&self.streamOutput.disconnect();clearInterval(self.instanceManagerPingLoop);clearInterval(self.qualityCheckLoop);self.instanceManagerPingLoop=0;self.qualityCheckLoop=0;self.cloudIp=0;self.connectionQuality=-1;self.onStreamDisconnect&&self.onStreamDisconnect();}}});};function getConnectionParametersFromURL(url){var regex=/(http|https):\/\/elb-cas-(\w+).(\w+).zlthunder.net/;var match=regex.exec(url);if(match){return{protocol:match[1],environment:match[2],customer:match[3],}}else{return null;}}
function detectRegion(){return"eu-west-1";}
function casURLFromConnectionParameters(parameters){if(parameters.forceCluster){var instance="cas-external"+"-"+
parameters.forceCluster.toLowerCase()+"-"+
parameters.region+"-"+
parameters.environment+"."+
parameters.customer+"."+
"zlthunder.net";console.log("Forcing use of specific CAS: "+instance);}else{var instance="cas"+"-"+
parameters.region+"-"+
parameters.environment+"."+
parameters.customer+"."+
"zlthunder.net";}
return parameters.protocol+"://"+instance;}
function reconcileOptions(options,onError){options.resolution=options.resolution||{};options.resolution.x=options.resolution.x||640;options.resolution.y=options.resolution.y||360;options.clientGroup=options.clientGroup||'default';options.parent=options.parent||'';options.car=options.car||{};options.car.manufacturer=options.car.manufacturer||'';options.car.model=options.car.model||'';options.car.year=options.car.year||'2016';options.reservedInstance=options.reservedInstance||'';options.streamClass=options.streamClass||null;options.setupPrCodes=options.setupPrCodes||null;options.setupCamera=options.setupCamera||null;options.loadingScreen=options.loadingScreen!==undefined?options.loadingScreen:false;options.idleOverlay=options.idleOverlay!==undefined?options.idleOverlay:true;options.idleDisconnect=options.idleDisconnect!==undefined?options.idleDisconnect:(10*60*1000);options.consumeMouseScrollEvents=options.consumeMouseScrollEvents!==undefined?options.consumeMouseScrollEvents:false;options.consumeMouseClickEvents=options.consumeMouseClickEvents!==undefined?options.consumeMouseClickEvents:true;options.showDownloadButton=options.showDownloadButton!==undefined?options.showDownloadButton:true;options.noRender=options.noRender||false;options.forceAbsMTTMovement=options.forceAbsMTTMovement!==undefined?options.forceAbsMTTMovement:false;options.mouseTracking=options.mouseTracking||{eventFreq:20,enabled:true,threshold:{x:0,y:0},scale:{interior:[30,50],exterior:[52,52]}};options.overlayOptions=options.overlayOptions||{buildOverlay:false,buildEnvironmentsOverlay:true,buildAnimationsOverlay:true,animations:['Doors','Trunk'],environments:['Iceland_Void','Tunnel_Env','WhiteVoid'],};if(options.car.model.indexOf("_")>-1){options.car.model=options.car.model.split("_")[0]}
options.car.requestedModel=options.car.model
var car_model_from_carline=Zlbolt.carline[options.car.model]?Zlbolt.carline[options.car.model]["script"]:false;if(car_model_from_carline){options.car.model=car_model_from_carline}
if(options.car.manufacturer=='audi'){if(options.car.model=='a5cabrio')
options.car.model='a5cabrionf';if(options.car.model=='q5')
options.car.model='q5nf';}
if(!options.setupCamera)
{options.setupCamera="CloudMRVSide"}
var model_remap={"2018":{"a8":"a8-au65x"},"2019":{"a1":"a1-au27x","a6":"a6-au58x","a7":"a7-au58x","a8":"a8-au65x","q8":"q8-au53x"}}
if(model_remap[options.car.year]&&model_remap[options.car.year][options.car.model])
options.car.model=model_remap[options.car.year][options.car.model]
if(!options.finalPrCodes){options.finalPrCodes=remapPrCodes(options.setupPrCodes,options.car);}
options.setupCamera=remapCamera(options.setupCamera);if(options.car.model=="a8-au65x"){if(options.setupCamera=="CloudMRVSide")
options.setupCamera="CloudMRV1"}
if(!options.connectionParameters&&(options.directConnect||options.instanceManager||options.casURL)){if(options.casURL){options.connectionParameters={protocol:'http',customer:'custom',environment:'custom',region:'custom',}}}else{if(options.server){console.log("Warning: using deprecated 'server' parameter. Please use options.connectionParameters instead.");}
if(!options.connectionParameters){options.connectionParameters=getConnectionParametersFromURL(options.server);}
if(options.connectionParameters){if(!options.connectionParameters.region){options.connectionParameters.region=detectRegion();console.log("Auto-detecting region: ",options.connectionParameters.region);}else{console.log("Explicit region supplied: ",options.connectionParameters.region);}
if(getParameterByName("zlenv")){var env_override=getParameterByName("zlenv");if(["stage","prelive","live"].includes(env_override))
options.connectionParameters.environment=env_override}
function checkForMissingParameter(parameter){if(!options.connectionParameters[parameter]){onError&&onError("Missing "+parameter+" from options.connectionParameters");return true;}
return false;}
if(checkForMissingParameter('protocol')){return undefined;}
if(checkForMissingParameter('customer')){return undefined;}
if(checkForMissingParameter('environment')){return undefined;}
options.casURL=casURLFromConnectionParameters(options.connectionParameters);}else{onError&&onError("Failed to parse connection parameters from options.server");return undefined;}}
options.model_whitelist={};return options;}
function recordOptionalVersion(newVersion){if(newVersion){if(self.streamingServiceVersion!=newVersion){console.log('Streaming Service: (version: '+newVersion+')');self.streamingServiceVersion=newVersion;}}else{console.log("Missing version");}}
this.connect=function(options,callback)
{if(self.connectFlag==true)
{self.onError&&self.onError("Already connected.");return;}
self.connectFlag=true;var connectionError=function(error)
{callback&&callback(error);self.onError&&self.onError(error);};options=options||{};self.options=reconcileOptions(options,function(error){connectionError({message:"Invalid options",context:'connect',details:error});callback&&callback(true)});if(!self.options){return; }
if(self.options.model_whitelist){var whitelist=self.options.model_whitelist[window.location.origin]
if(whitelist){if(whitelist.indexOf(self.options.car.model)==-1){connectionError({message:"Invalid options",context:'connect',details:"Invalid car: "+self.options.car.model});return;}}}
injectStreamWrapper(options)
if(options.localControl)
{self.cloudIp=server="127.0.0.1:4782"
self.instanceUsesSSL=false;container=options.parent?document.getElementById(options.parent)||document.body:document.body;self.createStream({instance:{ip:self.cloudIp}});self.getCameraData()
return}
setLoadingScreenState(true);self.checkCalls=0;self.checkCallsBeforeBackoff=15;self.checkInitialPeriod=200;self.checkBackoffPeriod=5000;var checkInstance=function(callback)
{var q={clientId:self.clientId,identifier:self.identifier};$.ajax({type:'POST',url:options.instanceManager+'/api/pingFromClient',data:q,success:function(data)
{if(data.instance)
{self.createStream(data);self.checkCalls=0;self.pingTime=-1;self.imPingFailCount=0;self.lastInstanceTimestamp=0;self.instancePingFailureCount=0;instanceManagerPingLoop=setInterval(self.pingIM,10000);qualityCheckLoop=setInterval(self.checkQuality,5000);self.getCameraData();}
else
{self.checkCalls++;if(data.expectedTime)
{estimatedTime=data.expectedTime.substr(data.expectedTime.lastIndexOf('T')+1).split('.')[0]+' GMT';}
var retryTime=(self.checkCalls>=self.checkCallsBeforeBackoff?self.checkBackoffPeriod:self.checkInitialPeriod)
checkInstanceRetryHandle=setTimeout(checkInstance,retryTime);}
if(data.error)
{callback&&callback(true)}
else
{callback&&callback(false)}},error:function(jqxhr,err)
{connectionError({message:err,context:'connect'});callback&&callback(true)}});};var hashRequestDetails=function(options){return options.car.manufacturer+" "+options.car.requestedModel+" "+options.car.year;}
if(!options.car.manufacturer||!options.car.model||!options.car.year)
{connectionError({message:'A car manufacturer, model and year should be specified but they were not',context:'connect'});return;}
if(options.directConnect)
{data={instance:{ip:options.directConnect}}
server=options.directConnect
self.createStream(data,true);qualityCheckLoop=setInterval(self.checkQuality,5000);return}
self.requestHash=hashRequestDetails(options);var savedClientId=this.getLocalClientId(self.requestHash,options.setupCamera);var savedIM=window.storage.getItem("instanceManager");if(savedClientId&&savedIM)
{self.clientToken=self.clientId=savedClientId;options.instanceManager=server=savedIM;checkInstance(function(error){if(!error)
{lastCamera=window.storage.getItem("lastCamera");return}
window.clearTimeout(checkInstanceRetryHandle);self.cleanLocalStorage();options.instanceManager=server=null;self.connect(options,callback);});return}
window.storage.setItem("lastCamera",options.setupCamera)
var makeConnection={type:'POST',data:{manufacturer:options.car.manufacturer,model:options.car.model,year:options.car.year,reservedInstance:options.reservedInstance,authToken:options.authToken,version:version,identifier:self.identifier,},error:function(jqxhr,err)
{connectionError({message:err,context:'connect'});},success:function(data)
{self.clientToken=self.clientId=data.clientId;self.setLocalClientId(self.clientId,self.requestHash);if(!self.clientId)
{connectionError({message:'Unable to get a client id from the server',context:'connect'});return;}
checkInstance();server=options.instanceManager;car=options.car;callback&&callback();}}
if(options.finalPrCodes)
{var prCodeString=options.finalPrCodes.join(',');makeConnection.data.prCodes=prCodeString;}
if(options.setupCamera)
{makeConnection.data.camera=options.setupCamera;lastCamera=options.setupCamera;}
if(options.instanceManager)
{console.log("Bypassing CAS and talking to "+options.instanceManager+" directly");makeConnection.url=options.instanceManager+'/api/startClient';makeConnection.data.token='noToken';$.ajax(makeConnection);}
else
{collectFilteringInformation(options,function(error,filteringInformation){if(error){connectionError({message:error.message,context:'collectFilteringInformation',details:error});return;}
getToken(options,filteringInformation,makeConnection,connectionError);});}};this.validate=function(options,callback){options=options||{};options=reconcileOptions(options,function(error){callback({message:"Invalid options",context:'validate',details:error},null);});if(!options){return;}
if(options.model_whitelist){var whitelist=options.model_whitelist[window.location.origin]
if(whitelist){if(whitelist.indexOf(options.car.model)==-1){callback({message:"Invalid options",context:'validate',details:"Invalid car: "+options.car.model});return;}}}
collectFilteringInformation(options,function(error,filteringInformation){if(error){callback({message:error.message,context:'collectFilteringInformation',details:error},null);return;}
$.ajax({type:'POST',url:options.casURL+'/validate',data:{version:version,clientGroup:options.clientGroup,filteringInformation:filteringInformation,identifier:self.identifier,car:options.car,},error:function(jqxhr,err)
{callback(null,{status:'valid'});},success:function(data)
{recordOptionalVersion(data.version);callback(null,data);}});});}
var collectFilteringInformation=function(options,callback){var filteringInfo={version:version,identifier:self.identifier,platform:navigator.platform,userAgent:navigator.userAgent,appName:navigator.appName,appVersion:navigator.appVersion,};if(options.username){filteringInfo.username=options.username;}
if(options.password){filteringInfo.password=options.password;}
filteringInfo.browserInfo=(function(){var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if(/trident/i.test(M[1])){tem=/\brv[ :]+(\d+)/g.exec(ua)||[];return'IE '+(tem[1]||'');}
if(M[1]==='Chrome'){tem=ua.match(/\b(OPR|Edge)\/(\d+)/);if(tem!=null)return tem.slice(1).join(' ').replace('OPR','Opera');}
M=M[2]?[M[1],M[2]]:[navigator.appName,navigator.appVersion,'-?'];if((tem=ua.match(/version\/(\d+)/i))!=null)M.splice(1,1,tem[1]);return M.join(' ');})();var measureLatency=function(server,callback){$.ajax({type:'POST',url:server+'/startMeasureLatency',data:{},error:function(jqxhr,err)
{callback&&callback({message:"Request failed",context:"startMeasureLatency",details:err},0);},success:function(data)
{if(data.stamp)
{console.log("Received server time: "+data.stamp);}
$.ajax({type:'POST',url:server+'/endMeasureLatency',data:data,error:function(jqxhr,err)
{callback&&callback({message:"Request failed",context:"endMeasureLatency",details:err},filteringInfo);},success:function(data)
{if(data.ping)
{callback&&callback(null,data.ping);}
else
{callback&&callback({message:"Missing response data",context:"endMeasureLatency",details:data},0);}}});}});}
var measureAccurateLatency=function(server,callback)
{var t=[],n=3;var ld=function(){t.push(+new Date);if(t.length>n)
done();else{$.ajax({type:'POST',url:server+'/startMeasureLatency?'+Math.random()+'='+(+new Date),data:{},error:function(jqxhr,err)
{callback&&callback({message:"Request failed",context:"startMeasureLatency",details:err},0);},success:function(data)
{ld();}})}};var done=function(){fastest=null
rtts=[]
for(var i=0;i<t.length-1;i++)
{var rtt=t[i+1]-t[i]
rtts.push(rtt)
if(!fastest||rtt<fastest)
fastest=rtt}
console.log("Round trip times: "+JSON.stringify(rtts))
callback&&callback(null,fastest);};ld();}
var measureBandwidth=function(server,callback){$.ajax({type:'POST',url:server+'/startMeasureBandwidth',data:{},error:function(jqxhr,err)
{callback&&callback({message:"Request failed",context:"startMeasureBandwidth",details:err},0);},success:function(data)
{$.ajax({type:'POST',url:server+'/endMeasureBandwidth',data:{"stamp":data.stamp},error:function(jqxhr,err)
{callback&&callback({message:"Request failed",context:"endMeasureBandwidth",details:err},filteringInfo);},success:function(data)
{if(data.bandwidth)
{callback&&callback(null,data.bandwidth);}
else
{callback&&callback({message:"Missing response data",context:"endMeasureBandwidth",details:data},0);}}});}});}
measureBandwidth(options.casURL,function(error,bandwidth){if(error){if(error.context=="startMeasureBandwidth"){}
else{callback&&callback({message:error.message,context:"measureBandwidth",details:error},filteringInfo);return;}}
filteringInfo.bandwidth=bandwidth;measureAccurateLatency(options.casURL,function(error,ping){if(error){if(error.context=="startMeasureLatency"){}
else{callback&&callback({message:error.message,context:"measureLatency",details:error},filteringInfo);return;}}
filteringInfo.ping=ping;callback&&callback(null,filteringInfo);});});};var getToken=function(options,filteringInformation,makeConnection,connectionError)
{var secureTransport=(options.connectionParameters.protocol=='https');var tokenRequestData={clientGroup:options.clientGroup,filteringInformation:filteringInformation,identifier:self.identifier,car:options.car,};if(options.connectionParameters.forceCluster){console.log("Asking the CAS to use cluster "+options.connectionParameters.forceCluster+" when getting token");tokenRequestData.forceCluster=options.connectionParameters.forceCluster;}
$.ajax({type:'POST',url:options.casURL+'/get_token',data:tokenRequestData,error:function(jqxhr,err)
{connectionError({message:err,context:'get_token',details:jqxhr});},success:function(data)
{if(!data.error)
{console.log("Received token: "+data.token);makeConnection.data.token=data.token;recordOptionalVersion(data.version);if(data.instanceManager.indexOf(':')==-1){var transport=(secureTransport?'https://':'http://');options.instanceManager=transport+data.instanceManager;}else{options.instanceManager=data.instanceManager;}
window.storage.setItem("instanceManager",options.instanceManager);console.log("options.instanceManager = "+options.instanceManager);makeConnection.url=options.instanceManager+'/api/startClient',$.ajax(makeConnection);}
else
{connectionError({message:data.error,context:'get_token'});}}});}
this.disconnect=function(callback)
{var container;if(!self.connectFlag){var err={message:'Calling disconnect before connect (or multiple times)',context:'disconnect'};self.onError&&self.onError(err);callback&&callback(err);return;}
setStreamIdleMonitorState(false);setOrphanedParentMonitorState(false);container=document.getElementById(self.options.parent);if(container){if(container.id=='streamWrapper'){container.parentNode.removeChild(container);}else{container.innerHTML='';}}
self.cleanLocalStorage()
self.connectFlag=false;self.animStates={};instanceManagerPingLoop&&clearInterval(instanceManagerPingLoop);qualityCheckLoop&&clearInterval(qualityCheckLoop);checkInstanceRetryHandle&&clearTimeout(checkInstanceRetryHandle);self.streamOutput&&self.streamOutput.disconnect(false);instanceManagerPingLoop=0;qualityCheckLoop=0;if(self.options.instanceManager){var q={clientId:self.clientId};$.ajax({type:'POST',url:self.options.instanceManager+'/api/disconnectClient',data:q,success:function(data){if(!data.success)
{var err={message:'not currently connected',context:'disconnect'};self.onError&&self.onError(err);callback&&callback(err);return;}
self.cloudIp=null;callback&&callback();}});}else{callback&&callback();}};this.getCameraData=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'getCameraData'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/camera/cameraData?model='+self.options.car.model+'&year='+self.options.car.year,dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{self.cameraData=data.carCameras
lastCameraData=data.currentCamera.camData
if(self.cameraData&&lastCameraData)
self.mttCameraControlsEnabled=true
if(data.cloudOrbitCamConfig){self.cloudOrbitCamConfig=data.cloudOrbitCamConfig;}
if(data.capabilities){self.mttSupportsRelativeMovement=data.capabilities.supportsRelativeMovement;}
if(self.mttSupportsRelativeMovement){console.log('[onCameraDataRetrieved] Relative MTT movement supported.');}else{console.log('[onCameraDataRetrieved] Relative MTT movement NOT supported.');}
callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'getCameraData'};self.onError&&self.onError(err);callback&&callback(err);}});}
this.enumerateCameras=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'enumerateCameras'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/camera/enumerate',dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'enumerateCameras'};self.onError&&self.onError(err);callback&&callback(err);}});};this.enumerateEnvironments=function(callback)
{if(self.options.car.manufacturer.toLowerCase()=="audi")
{callback&&callback({"environments":["Iceland_Void","Tunnel_Env","WhiteVoid"],"success":true})
console.log("enumerateEnvironments returning default.")
return}
if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'enumerateEnvironments'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/environment/enumerate',dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{if(data&&data["environments"])
{var index=data["environments"].indexOf("RTTVoid");if(index>-1)
data["environments"].splice(index,1);}
callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'enumerateEnvironments'};self.onError&&self.onError(err);callback&&callback(err);}});};this.enumerateAnimations=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'enumerateAnimations'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/car/animations',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'enumerateAnimations'};self.onError&&self.onError(err);callback&&callback(err);}});};this.enumerateAllAnimations=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'enumerateAnimations'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/car/animations',headers:{'x-zl-client-token':self.clientToken},dataType:"json",data:{unfiltered:true},success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'enumerateAnimations'};self.onError&&self.onError(err);callback&&callback(err);}});};this.addStreamOption=function(streamOptionsContainer,optionName,opt)
{var optionClicked=function(option)
{self[option.handler](option.param);};var optionButton=document.createElement('div');optionButton.className='option-button';optionButton.id=optionName;streamOptionsContainer.appendChild(optionButton);var optButton=$('#'+optionName);optButton.click(function(){optionClicked(opt)});};this.addCameraOption=function(streamOptionsContainer,optionName,opt)
{var optionClicked=function(option)
{self[option.handler](option.param);self.toggleCameraOptions();};var optionButton=document.createElement('div');optionButton.className='camera-button';optionButton.id=optionName;streamOptionsContainer.appendChild(optionButton);var optButton=$('#'+optionName);if(opt.position)
{optButton.css({"left":opt.position[0],"top":opt.position[1]});}
optButton.click(function(){optionClicked(opt)});if(opt.rotation)
{optButton.css('transform','rotate('+opt.rotation+'deg)');}};this.buildStreamOptionsDisplay=function(parentDomElement)
{var streamOptionsContainer=document.createElement('div');streamOptionsContainer.className='options-wrapper';parentDomElement.appendChild(streamOptionsContainer);for(var optName in this.streamOptions)
{if(this.streamOptions.hasOwnProperty(optName))
{this.addStreamOption(streamOptionsContainer,optName,this.streamOptions[optName]);}}
var cameraOptionsContainer=document.createElement('div');cameraOptionsContainer.className='camera-wrapper';parentDomElement.appendChild(cameraOptionsContainer);for(var optName in this.streamOptionsCamera)
{if(this.streamOptionsCamera.hasOwnProperty(optName))
{this.streamOptionsCamera[optName].handler='switchCamera';this.addCameraOption(cameraOptionsContainer,optName,this.streamOptionsCamera[optName]);}}
$('.options-wrapper').fadeIn(1000);};this.toggleCameraOptions=function()
{this.showingCameraOptions=!this.showingCameraOptions;if(this.showingCameraOptions)
{$('.camera-wrapper').fadeIn(300)}
else
{$('.camera-wrapper').fadeOut(500)}};this.triggerAnimation=function(anim,callback,instant)
{clearStreamIdleTimeout();if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'triggerAnimation'};window.onError&&window.onError(err);callback&&callback(err);},0);return;}
if(self.animating)
{return;}
self.animating=true;if(self.animStates[anim]===undefined)
{self.animStates[anim]=0;}
reverse=self.animStates[anim];var url=self.instanceURL()+'/zl/car/animate?anim='+anim;if(reverse)
{url+='&reverse=1';}
if(instant)
{url+='&skip=1'}
url+='&no_blur_on_open=1'
$.ajax({url:url,dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{self.animStates[anim]=self.animStates[anim]?0:1;self.animating=false;callback&&callback(data);},error:function(jqxhr,error)
{self.animating=false;var err={message:error,context:'triggerAnimation'};self.onError&&self.onError(err);callback&&callback(err);}});};this.setPrCodes=function(codes,callback)
{if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected',context:'setPrCodes'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
clearStreamIdleTimeout();remappedCodes=remapPrCodes(codes,self.options.car)
prCodes=remappedCodes.join(',');window.storage&&(window.storage.setItem(prCodes,JSON.stringify(remappedCodes)));var url=self.instanceURL()+'/zl/car/configure?prcodes='+prCodes;$.ajax({url:url,dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'setPrCodes'};self.onError&&self.onError(err);callback&&callback(err);}});};this.toggleFasterCameraMessaging=function(toggle,callback){if(!priv.checkStreamIsActive('toggleFasterCameraMessaging',callback)){return;}
clearStreamIdleTimeout();self.cameraMoveFast=toggle;console.log('Faster sending of camera messages is now: ',self.cameraMoveFast);callback&&callback();};this.switchEnvironment=function(envName,callback)
{clearStreamIdleTimeout();if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'switchEnvironment'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
env_remap={"WhiteVoid":"Audi_WhiteStudio"
}
envName=env_remap[envName]?env_remap[envName]:envName;var url,type;url=self.instanceURL()+"/zl/environment/switch?name="+envName;type='GET';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'switchEnvironment'};self.onError&&self.onError(err);callback&&callback(err);}});};var remapCamera=function(cameraName){var cameraOverrides={"FrontRightShare":"Cloud_FrontRightShare","MRV1":"CloudMRV1","MRV4":"CloudMRV4","MRV5":"CloudMRV5","MRV6":"CloudMRV6","MRVSide":"CloudMRVSide","Rims":"Side_Panel"}
var rightHandDriveOverrides={"InteriorSide_L0L":"InteriorSide_L0R","Interior_Rear_View":"Interior_Rear_View_RHD"}
if(cameraOverrides[cameraName]){console.log("Intercepting request for "+cameraName+" and using "+cameraOverrides[cameraName]+" instead");return cameraOverrides[cameraName];}else if(self.rightHandDrive&&rightHandDriveOverrides[cameraName]){console.log("Intercepting request for "+cameraName+" and using "+rightHandDriveOverrides[cameraName]+" instead because right hand drive");return rightHandDriveOverrides[cameraName];}
else{return cameraName;}}
var remapPrCodes=function(inputCodes,car){if(typeof(inputCodes)=='string'){inputCodes=[inputCodes];}
var needschange=(car.manufacturer=='audi');priv.checkForRightHandDrive(inputCodes)
if(needschange&&inputCodes){var inputList=[]
inputCodes.forEach(function(code){inputList=inputList.concat(code.split(','))})
var outputList=[]
var mapping={}
for(var i=0,l=inputList.length;i<l;i++){if(mapping[inputList[i]]){outputList.push(mapping[inputList[i]]);console.log("Replacing "+inputList[i]+' with '+mapping[inputList[i]]+' in PR codes')}else{outputList.push(inputList[i]);}}
if(car.model=="a8-au65x"){if(outputList.indexOf("Y7F")>-1){qindex=outputList.indexOf("Q0Q0")
if(qindex>-1){outputList.splice(qindex,1)}}
var exclusiveCodeIndex=outputList.indexOf("Q0Q0")
if(exclusiveCodeIndex>-1){outputList[exclusiveCodeIndex]=outputList[exclusiveCodeIndex-1]
outputList[exclusiveCodeIndex-1]="Q0Q0"}
qindex=outputList.indexOf("Q1D")
if(qindex>-1){outputList.splice(qindex,1)}}
return outputList}
return inputCodes;}
this.switchCamera=function(cameraName,callback,behaviour)
{clearStreamIdleTimeout();if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'switchCamera'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
cameraName=remapCamera(cameraName);if(lastCamera==cameraName)
{setTimeout(function()
{callback&&callback();},0);return;}
var url,type;url=self.instanceURL()+"/zl/camera/switch?cameraId="+cameraName+"&withFlyIntro=true"+(behaviour!==undefined?"&cameraBehaviour="+behaviour:"");var override=this.cameraAnimOverrides[cameraName]
if(override)
{url=self.instanceURL()+"/zl/camera/switchCameraWithAnim?cameraId="+cameraName+"&anim="+override[0]+"&reverse="+override[1];}
else
{if(!LastCameraWasInterior()&&cameraName=='3')
{url=self.instanceURL()+"/zl/camera/switch?cameraId="+cameraName+"&withFlyIntro=true";}}
type='GET';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{console.log('switchCamera:',data);lastCamera=Object.keys(data)[0]
lastCameraData=data[lastCamera]
window.storage.setItem("lastCamera",lastCamera)
callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'switchCamera'};self.onError&&self.onError(err);callback&&callback(err);}});};this.rollingPlane=function(floorColor,stop)
{if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'rollingPlane'};self.onError&&self.onError(err);},0);return;}
var url,type;url=self.instanceURL()+"/zl/car/rollingPlane?";if(stop){url+="stop=1";}else{url+="r="+floorColor[0]+"&g="+floorColor[1]+"&b="+floorColor[2];}
type='GET';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{console.log("Rolling plane success");},error:function(jqxhr,error)
{var err={message:error,context:'rollingPlane'};self.onError&&self.onError(err);}});};this.screenshotCapture=function(width,height)
{if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'screenshotCapture'};self.onError&&self.onError(err);},0);return;}
var url,type;url=self.instanceURL()+"/zl/tools/screenshot?width="+width+"&height="+height;type='GET';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{console.log("Screenshot captured");},error:function(jqxhr,error)
{var err={message:error,context:'screenshotCapture'};self.onError&&self.onError(err);}});}
this.setVehicleState=function(state,callback)
{if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'setVehicleState'};self.onError&&self.onError(err);},0);return;}
var url,type;url=self.instanceURL()+"/zl/tools/setVehicleState";type='POST';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",data:state,success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'setVehicleState'};self.onError&&self.onError(err);callback&&callback(err);}});}
this.toggleAlexa=function(toggle,callback)
{if(!server||!self.cloudIp)
{setTimeout(function()
{var err={message:'Not currently connected to a stream',context:'toggleAlexa'};self.onError&&self.onError(err);},0);return;}
var url,type;url=self.instanceURL()+"/zl/alexa/"+((toggle)?'enable':'disable');type='GET';$.ajax({url:url,type:type,headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'toggleAlexa'};self.onError&&self.onError(err);callback&&callback(err);}});}
self.moveCamera=function(posX,posY,posZ,callback){var rotationDelta={x:posX,y:posY,z:0},zoom=posZ;priv.moveCameraInternal(null,rotationDelta,zoom,false,callback);};priv.getDebugTime=function(){return(Date.now()-priv.initTime)%2147483647;}
priv.moveCameraInternal=function(positionDelta,rotationDelta,zoom,preserveCamera,callback){var _doMoveCamera=function(){var useNewCameraControl=!self.options.useLegacyCameraControl||zlbolt.getCamera()=='CloudFlyCam';priv.moveCamDebugTime=priv.getDebugTime();if(rotationDelta&&zlbolt.cameraMoveFast){priv.fasterDoMoveCamera(rotationDelta.x,rotationDelta.y,zoom,callback);}else if(useNewCameraControl){priv.setCameraControl(positionDelta,rotationDelta,zoom,callback);}else{priv.legacyDoMoveCamera(rotationDelta.x,rotationDelta.y,zoom,false,callback);}};clearStreamIdleTimeout();if(preserveCamera){_doMoveCamera();}else if(LastCameraWasInterior()){self.switchCamera('InteriorStatic',_doMoveCamera);}else{self.switchCamera('CloudMRVSide',_doMoveCamera);}};priv.fasterDoMoveCamera=function(posX,posY,posZ,callback){if(self.streamOutput&&self.streamOutput.sendCameraMousePos){self.streamOutput.sendCameraMousePos([posX,posY,posZ,priv.moveCamDebugTime]);callback&&callback();}else{callback&&callback({message:'No stream output, or no support for WebSocket camera messages',context:'fasterDoMoveCamera'});}};priv.legacyDoMoveCamera=function(posX,posY,posZ,useDeltas,callback){var url=self.instanceURL()+'/zl/camera/set_mouse_control?mouse_posx='+posX+
'&mouse_posy='+posY+'&mouse_posz='+posZ+
'&scrollwheeldelta='+useDeltas+
'&debug_ctr='+priv.moveCamDebugTime+
'&x_zl_client_token='+self.clientToken;$.ajax({url:url,dataType:'json',type:'post',success:function(data){callback&&callback(null,data);},error:function(jqxhr,error){if(jqxhr.status==429){callback&&callback();}else{callback&&callback({message:error,context:'moveCamera'});}}});};priv.setCameraControl=function(positionDelta,rotationDelta,zoom,callback){var url=self.instanceURL()+'/zl/camera/set_camera_control?&x_zl_client_token='+self.clientToken,data={debug_ctr:priv.moveCamDebugTime};if(positionDelta){data.posx=positionDelta.x;data.posy=positionDelta.y;data.posz=positionDelta.z;}
if(rotationDelta){data.rotx=rotationDelta.x;data.roty=rotationDelta.y;data.rotz=rotationDelta.z;}
if(zoom!==null&&zoom!==undefined){data.zoom=zoom;}
$.ajax({url:url,dataType:'json',type:'post',data:data,success:function(data){callback&&callback(null,data);},error:function(jqxhr,error){if(jqxhr.status==429){callback&&callback();}else{callback&&callback({message:error,context:'setCameraControl'});}}});};this.updateCamera=function(dx,dy,dz,callback)
{var lerp=function(a,b,t)
{return a+(b-a)*t}
var clamp=function(val,min_val,max_val)
{return Math.max(min_val,Math.min(max_val,val))}
var minPitchChange,maxPitchChange,minYawChange,maxYawChange,inputDamper,zoomFactor,currentCameraData,cummulativePitchChange,cummulativeYawChange,distanceMin,distanceMax,distanceRange,zoomIncrement,zoomDelta,newDistance,pitchChange,yawChange;minPitchChange=0
maxPitchChange=10
minYawChange=0
maxYawChange=10
inputDamper=0.25
zoomFactor=10
currentCameraData=self.cameraData[lastCamera]
cummulativePitchChange=lastCameraData.rotation.pitch||0
cummulativeYawChange=lastCameraData.rotation.yaw||0
distanceMin=lastCameraData.boundaries.minimumDistance
distanceMax=lastCameraData.boundaries.maximumDistance
if(currentCameraData.boundaries.maximumAngles.pitch==currentCameraData.boundaries.minimumAngles.pitch&&currentCameraData.boundaries.maximumAngles.yaw==currentCameraData.boundaries.minimumAngles.yaw&&!dz)
return
if(dx==0&&dy==0&&distanceMin==distanceMax)
return
if(distanceMin==0&&distanceMax==3000)
{distanceMin=3
distanceMax=10}
else if(distanceMax==3000)
{distanceMax=10}
distanceRange=distanceMax-distanceMin
zoomIncrement=distanceRange/zoomFactor
zoomDelta=zoomIncrement*dz
newDistance=lastCameraData.distance+zoomDelta
newDistance=clamp(newDistance,distanceMin,distanceMax)
pitchChange=lerp(minPitchChange,maxPitchChange,Math.abs(dy)/inputDamper)
yawChange=lerp(minYawChange,maxYawChange,Math.abs(dx)/inputDamper)
var last_cam_interior=LastCameraWasInterior()
if(dy<0&&!last_cam_interior||dy>0&&last_cam_interior){cummulativePitchChange+=pitchChange
cummulativePitchChange=Math.min(cummulativePitchChange,currentCameraData.boundaries.maximumAngles.pitch)}
else{cummulativePitchChange-=pitchChange
cummulativePitchChange=Math.max(cummulativePitchChange,currentCameraData.boundaries.minimumAngles.pitch)}
if(dx<0&&!last_cam_interior||dx>0&&last_cam_interior){cummulativeYawChange-=yawChange
cummulativeYawChange=Math.max(cummulativeYawChange,currentCameraData.boundaries.minimumAngles.yaw)}
else{cummulativeYawChange+=yawChange
cummulativeYawChange=Math.min(cummulativeYawChange,currentCameraData.boundaries.maximumAngles.yaw)}
lastCameraData.rotation.pitch=cummulativePitchChange
lastCameraData.rotation.yaw=cummulativeYawChange
lastCameraData.distance=newDistance
clearStreamIdleTimeout();var url=self.instanceURL()+"/zl/camera/current?yaw="+String(cummulativeYawChange)+"&pitch="+String(cummulativePitchChange)+"&distance="+String(newDistance);$.ajax({url:url,dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'updateCamera'};self.onError&&self.onError(err);callback&&callback(err);}});};priv.cameraSupportsMTT=function(cameraName){var currentCameraData=(self.cameraData||{})[cameraName];if(!currentCameraData){return false;}
return!(currentCameraData.boundaries.maximumAngles.pitch==currentCameraData.boundaries.minimumAngles.pitch&&currentCameraData.boundaries.maximumAngles.yaw==currentCameraData.boundaries.minimumAngles.yaw);}
function LastCameraWasInterior()
{return(lastCamera=='Interior'||lastCamera=='InteriorStatic'||lastCamera=='InteriorSide_L0L'||lastCamera=='Interior_Rear_View'||lastCamera=='InteriorSide_L0R');}
priv.checkForRightHandDrive=function(prcodes){if(prcodes)
{self.rightHandDrive=prcodes.indexOf('L0R')!==-1;self.leftHandDrive=!self.rightHandDrive;if(self.rightHandDrive){console.log('[CheckForRightHandDrive] Right-hand drive detected.');}else
console.log('[CheckForRightHandDrive] Left-hand drive detected.');}
return self.rightHandDrive;}
this.enableMouseTracking=function(toggle,callback)
{if(typeof(toggle)=='function'||typeof(toggle)=='undefined')
{callback=toggle;toggle=true;}
var streamElement=self.streamOutput.streamElement;if(!streamElement)
{setTimeout(function()
{var err={message:'A DOM element to attach mouse events to is needed but not available',context:'enableMouseTracking'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
var pinchZoomDistance=0;var mouseWheelZoomDefault=1;let lastMousePos={x:0,y:0};let lastMousePosDispatcher={x:0,y:0};let lastClickPos={x:0,y:0};let lastMousePosAbs={x:0,y:0};let lastMouseMove=-1;let lastMouseMoveSubmit=-1;var lastCameraOnMouseMove=null;let lastMouseWheelChange=Date.now();var mouseWheelChanged=false;var mouseWheelValue=0;var mouseWheelDirection=1;var cancelEvent=function(eventObj)
{eventObj=eventObj?eventObj:window.event;if(eventObj.stopPropagation)
{eventObj.stopPropagation();}
if(eventObj.preventDefault)
{eventObj.preventDefault();}
eventObj.returnValue=false;eventObj.cancel=true;eventObj.cancelBubble=true;};function _getMousePosAdv(el,evt){const rect=el.getBoundingClientRect();return{normalised:{x:(evt.clientX-Math.ceil(rect.left))/rect.width,y:(evt.clientY-Math.ceil(rect.top))/rect.height},default:{x:(evt.clientX-Math.ceil(rect.left)-rect.width/2)*2/rect.width,y:(rect.height/2-evt.clientY+Math.ceil(rect.top))*2/rect.height},absolute:{x:evt.clientX,y:evt.clientY,},container:{x:evt.clientX-Math.ceil(rect.left),y:evt.clientY-Math.ceil(rect.top)}};}
var initialiseZoom=function(){var min,max,def,lastCameraSupportsMTT=priv.cameraSupportsMTT(lastCamera),cameraData=self.cameraData&&self.cameraData[lastCamera];if(String(lastCamera)in{'FlyCam':1,'3':1,'CloudCam':1}&&self.cloudOrbitCamConfig){min=self.cloudOrbitCamConfig.m_minFOV;max=self.cloudOrbitCamConfig.m_maxFOV;def=self.cloudOrbitCamConfig.m_defaultFOV;if(min!=null&&max!=null&&def!=null){priv.mouseWheelZoom=(def-min)/(max-min);console.log('[initialiseZoom] FlyCam/CloudCam default zoom set:',priv.mouseWheelZoom);return;}}else if(lastCameraSupportsMTT&&cameraData){min=parseFloat(cameraData.boundaries.minimumDistance);max=parseFloat(cameraData.boundaries.maximumDistance);def=parseFloat(cameraData.distance);if(!isNaN(min)&&!isNaN(max)&&!isNaN(def)&&max!=min){priv.mouseWheelZoom=(def-min)/(max-min);console.log('[initialiseZoom] MTT default zoom set:',priv.mouseWheelZoom);return;}
min=parseFloat(cameraData.boundaries["minimumY-fov"]);max=parseFloat(cameraData.boundaries["maximumY-fov"]);def=parseFloat(cameraData["y-fov"]);if(!isNaN(min)&&!isNaN(max)&&!isNaN(def)&&max!=min){priv.mouseWheelZoom=(def-min)/(max-min);console.log('[initialiseZoom] MTT default zoom set:',priv.mouseWheelZoom);return;}}
priv.mouseWheelZoom=mouseWheelZoomDefault;console.log('[initialiseZoom] Fallback default zoom set:',priv.mouseWheelZoom);};var isDispatching=false,dispatcherTimeoutHandle=-1;var _stopInputDispatcher=function(){if(dispatcherTimeoutHandle!==-1){clearTimeout(dispatcherTimeoutHandle);dispatcherTimeoutHandle=-1;}
isDispatching=false;};function _inputDispatcher(doInit){var mousePos=priv.mouseState.position.default,now=Date.now();let dx=mousePos.x-lastMousePosDispatcher.x;let dy=mousePos.y-lastMousePosDispatcher.y;if(mouseWheelChanged){dx=dy=0;}
if(!(priv.mouseState.mouseDown||mouseWheelChanged)){return _stopInputDispatcher();}
const hasChanges=(dx!=0||dy!=0||mouseWheelChanged);if(!hasChanges&&isDispatching){_stopInputDispatcher();}else if(hasChanges&&(!isDispatching||!doInit)){isDispatching=true;lastMousePosDispatcher=Object.assign({},mousePos);_doCameraMove(dx,dy,mouseWheelValue,function(){let delay=Math.max(1,self.options.mouseTracking.eventFreq,Date.now()-now);dispatcherTimeoutHandle=setTimeout(_inputDispatcher,delay);});}}
function _doCameraMove(dx,dy,mouseWheelValue,callback){var isInteriorCamera=LastCameraWasInterior();var scale=self.options.mouseTracking.scale[isInteriorCamera?'interior':'exterior'];var posX=dy*scale[0];var posY=dx*scale[1];var posZ=0;if(self.sendMouseDeltas){posZ=mouseWheelValue;mouseWheelValue=0;}else{posZ=priv.mouseWheelZoom;}
if(!mouseWheelChanged){mouseWheelDirection=0;}
var lastCameraSupportsMTT=priv.cameraSupportsMTT(lastCamera);var cameraData=self.cameraData&&self.cameraData[lastCamera];if(!lastCameraData){lastCameraData=cameraData}
var canUseMTT=self.mttCameraControlsEnabled&&cameraData&&lastCameraData&&lastCameraSupportsMTT;if(canUseMTT){if(self.mttSupportsRelativeMovement&&!self.options.forceAbsMTTMovement){if(isInteriorCamera){posX=-posX;posY=-posY;}
priv.moveCameraInternal(null,{x:posX,y:posY,z:0},posZ,true,callback);}else{self.updateCamera(dx,dy,-mouseWheelDirection);}}else{if(isInteriorCamera){posX=-posX;posY=-posY;if(dx||dy){posZ=0;}else{posZ=(-mouseWheelValue*2)||0;}}
priv.moveCameraInternal(null,{x:posX,y:posY,z:0},posZ,false,callback);}}
var _clearSelection=function(){if(document.selection){document.selection.empty();}else{window.getSelection().removeAllRanges();}}
var handlers={mouseDown:function(evt)
{var mousePosAdv=_getMousePosAdv(streamElement,evt);priv.mouseState.mouseDown=true;lastClickPos=Object.assign({},mousePosAdv.default);lastMousePos=Object.assign({},mousePosAdv.default);lastMousePosDispatcher=Object.assign({},mousePosAdv.default);lastMousePosAbs={x:evt.clientX,y:evt.clientY};handlers.mouseMove(evt);self.onMouseDown&&self.onMouseDown(lastClickPos)
_clearSelection();if(window.utag&&window.utag.link){window.setTimeout(function(){utag.link({gua_ec:'configurator-360',gua_ea:'rotate',gua_el:'rotate'});},0)}},mouseUp:function(evt)
{priv.mouseState.mouseDown=false;self.onMouseUp&&self.onMouseUp(_getMousePosAdv(streamElement,evt))},mouseWheel:function(evt)
{var d=new Date();var timeDiff=d.getTime()-lastMouseWheelChange;if(timeDiff>100)
{var mouseWheelZm=(Math.max(Math.min(evt.wheelDelta,1),-1));priv.mouseWheelZoom-=mouseWheelZm/10.0;priv.mouseWheelZoom=Math.min(Math.max(priv.mouseWheelZoom,0),1.0);mouseWheelValue=(Math.max(Math.min(evt.wheelDelta,1),-1));mouseWheelChanged=true;mouseWheelDirection=evt.wheelDelta>0?1:-1
handlers.mouseMove(evt);mouseWheelChanged=false;lastMouseWheelChange=d.getTime();}
if(self.options.consumeMouseScrollEvents&&evt.preventDefault){evt.preventDefault();}else{return false;}},DOMMouseScroll:function(evt){var delta=evt.detail?evt.detail*(-120):evt.wheelDelta
handlers.mouseWheel({clientX:evt.clientX,clientY:evt.clientY,wheelDelta:delta,});if(self.options.consumeMouseScrollEvents&&evt.preventDefault){evt.preventDefault();}else{return false;}},touchStart:function(evt)
{var t=evt.touches;if(t.length==2)
{var dx=t[0].pageX-t[1].pageX;var dy=t[0].pageY-t[1].pageY;pinchZoomDistance=Math.sqrt(dx*dx+dy*dy);}
else if(t.length==1)
{handlers.mouseDown(t[0]);}
cancelEvent(evt);},touchEnd:function(evt)
{if(evt.changedTouches&&evt.changedTouches.length)
{for(var i=0;i<evt.changedTouches.length;i++)
{handlers.mouseUp(evt.changedTouches[i]);}}
cancelEvent(evt);},touchMove:function(evt)
{var t=evt.touches||touches;if(t.length==2)
{var dx=t[0].pageX-t[1].pageX;var dy=t[0].pageY-t[1].pageY;var dist=Math.sqrt(dx*dx+dy*dy);if(dist)
{var value=(pinchZoomDistance-dist);if(Math.abs(value)>0.0001)
{var scale=1;value=-30*value/scale;handlers.mouseWheel({clientX:t[0].pageX,clientY:t[0].pageY,detail:-value,wheelDelta:value});}}
pinchZoomDistance=dist;}
else if(t.length==1)
{handlers.mouseMove(t[0]);}
cancelEvent(evt);},mouseMove:function(evt){var now=Date.now();var mousePosAdv=_getMousePosAdv(streamElement,evt);var mousePos=mousePosAdv.default;priv.mouseState.position=mousePosAdv;var _doFinalLogic=function(){lastMousePos=Object.assign({},mousePos);lastMousePosAbs={x:evt.clientX,y:evt.clientY};lastMouseMove=now;};if(lastCameraOnMouseMove!=lastCamera){initialiseZoom();lastCameraOnMouseMove=lastCamera;}
_inputDispatcher(true);_doFinalLogic();}};var f=toggle?'addEventListener':'removeEventListener';streamElement[f]('mousedown',handlers.mouseDown);streamElement[f]('mouseup',handlers.mouseUp);streamElement[f]('mouseleave',handlers.mouseUp);streamElement[f]('mousewheel',handlers.mouseWheel);streamElement[f]('DOMMouseScroll',handlers.DOMMouseScroll);streamElement[f]('mousemove',handlers.mouseMove,false);streamElement[f]('touchstart',handlers.touchStart);streamElement[f]('touchend',handlers.touchEnd);streamElement[f]('touchmove',handlers.touchMove);if(self.streamWrapper&&self.options.consumeMouseClickEvents){self.streamWrapper[f]('click',function(e){e.stopPropagation();});self.streamWrapper[f]('mousedown',function(e){e.stopPropagation();});self.streamWrapper[f]('mouseup',function(e){e.stopPropagation();});self.streamWrapper[f]('touchstart',function(e){e.stopPropagation();});self.streamWrapper[f]('touchend',function(e){e.stopPropagation();});}
self.options.mouseTracking.enabled=toggle;setTimeout(function(){callback&&callback();},0);};self.changeStreamOutput=function(handlerClass){var shouldEnableMouseTracking=false;if(!self.streamOutput){throw Error('[changeStreamOutput] No existing stream.');}else if(!handlerClass){throw Error('[changeStreamOutput] Missing or invalid stream class.');}
if(self.options.mouseTracking.enabled){shouldEnableMouseTracking=true;self.enableMouseTracking(false);}
self.streamOutput.destroy();self.streamOutput=new handlerClass(self,self.options);self.streamOutput.initialise();self.streamOutput.connect(self.cloudIp,self.instanceUsesSSL,self.clientToken);if(shouldEnableMouseTracking){self.enableMouseTracking(true);}};this.getQRCode=function(elementName,callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'getQRCode'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
var element=document.getElementById(elementName);if(!element)
{setTimeout(function()
{var err={message:'Unable to find a DOM element with that name',context:'getQRCode'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
setTimeout(function()
{var size=Math.min($(element).width(),$(element).height());new QRCode(element,{text:self.cloudIp+':'+self.clientToken,width:size,height:size});callback&&callback();},0);};this.checkConnectionQuality=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'checkConnectionQuality'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
setTimeout(function()
{callback&&callback(null,{latency:(connectionQuality>=0?connectionQuality:3),connected:(connectionQuality>=0?true:false)});},0);};this.createEventStreamClient=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'getEventStreamClient'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/pubsub/connect',type:'GET',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'getEventStreamClient'};self.onError&&self.onError(err);callback&&callback(err);}});};this.subscribeEventStream=function(clientid,channel,callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'subscribeEventStream'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/pubsub/sub?clientid='+clientid+'&channel='+channel,type:'GET',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'subscribeEventStream'};self.onError&&self.onError(err);callback&&callback(err);}});};this.getEventStream=function(clientid,callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'getEventStream'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/pubsub/events?clientid='+clientid,type:'GET',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'getEventStream'};self.onError&&self.onError(err);callback&&callback(err);}});};this.directorSync=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'directorsync'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/tools/directorsync',type:'GET',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'directorSync'};self.onError&&self.onError(err);callback&&callback(err);}});}
this.directorSyncComplete=function(callback)
{if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'directorSyncComplete'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$.ajax({url:self.instanceURL()+'/zl/tools/directorsynccomplete',type:'GET',headers:{'x-zl-client-token':self.clientToken},dataType:"json",success:function(data)
{callback&&callback(data);},error:function(jqxhr,error)
{var err={message:error,context:'directorSyncComplete'};self.onError&&self.onError(err);callback&&callback(err);}});}
this.directMessage=function(verb,message,callback)
{if(!directMessageDeprecatedWarningSent)
{directMessageDeprecatedWarningSent=true;console.log('zlbolt.directMessage is deprecated and may be removed from future versions of zlbolt');}
if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'checkConnectionQuality'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
verb=verb.toLowerCase();if(verb!='get'&&verb!='post')
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'checkConnectionQuality'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
$[verb](self.instanceURL()+'/'+message,function(data)
{callback&&callback({result:data});});};this.panoramicCapture=function(carData,callback)
{if(typeof(carData)=='function')
{callback=carData;carData=null;}
if(!self.cloudIp)
{setTimeout(function()
{var err={message:'Currently not connected to a cloud stream',context:'panoramicCapture'};self.onError&&self.onError(err);callback&&callback(err);},0);return;}
var captureId=(new Date()).getTime();var numAttempts=0;$.ajax({url:self.instanceURL()+'/zl/tools/panocapture?captureID='+captureId,dataType:"json",headers:{'x-zl-client-token':self.clientToken},success:function(data)
{var tryToGetIt=function()
{var img=new Image();img.onload=function()
{callback&&callback(null,img);};img.onerror=function()
{if(++numAttempts==20)
{callback&&callback({message:'Unable to retrieve panoramic capture',context:'panoramicCapture'});return;}
setTimeout(tryToGetIt,1000);};img.src=self.instanceURL()+data['Left']+'?x_zl_client_token='+self.clientToken;};setTimeout(tryToGetIt,3000);},error:function(jqxhr,error)
{callback&&callback({message:error,context:'panoramicCapture'});}})};this.assetURL=function(relativePath){return'//zlbolt.zlthunder.net/version/'+version+'/'+relativePath;};var lastLoadingScreenShowTimestamp=0;function setLoadingScreenState(state,callback){var options=self.options,$container=$(document.body),$loadingScreen,currentlyVisible,delay,timeTaken,minDelay=1000;if(!options.loadingScreen){if(callback){callback();}
return;}
if(options.parent&&document.getElementById(options.parent)){$container=$('#'+options.parent);}
$loadingScreen=ensureLoadingScreenHTML($container);currentlyVisible=$loadingScreen.hasClass('visible');if(state&&!currentlyVisible){lastLoadingScreenShowTimestamp=Date.now();$loadingScreen.addClass('visible').stop(true,true).fadeIn(500,callback);}else if(!state&&currentlyVisible){timeTaken=Date.now()-lastLoadingScreenShowTimestamp;delay=Math.max(minDelay,minDelay-timeTaken);$loadingScreen.removeClass('visible').stop(true,true).delay(delay).fadeOut(500,callback);}
console.log('[setLoadingScreenState] State: '+currentlyVisible+' -> '+state);}
function ensureLoadingScreenHTML($container){var options=self.options,html,css,imgCSS,$loadingScreen=$container.find('> .loading-screen'),width=options.resolution.x,height=options.resolution.y,baseURL=self.assetURL('img/loading/');if($loadingScreen.length>0){return $loadingScreen;}
css=['position:absolute','z-index:100','width:100%','height:100%','background:white url(\''+baseURL+'texture_bg.png\') top left no-repeat','overflow:hidden'];imgCSS=['position:absolute','bottom:50px','left:50px','box-shadow:0 0 5px 5px white','border-radius:50%;','background: white'];html='<div class="loading-screen" style="'+css.join(';')+'">';html+='<img src="'+baseURL+'loader_anim.gif" style="'+imgCSS.join(';')+'" width="112" height="112" />';html+='</div>';return $(html).appendTo($container);}
function buildImageDownloadButton($container){var html,css,imgcss,screenshoturl,width=1920,height=1080;baseURL=self.assetURL('img/');css=['position: absolute','top: 5px','left: 5px','width: 40px','height: 40px','background: url('+baseURL+'BTN_download.png);','cursor: pointer;','z-index:10'];screenshoturl=self.instanceURL()+"/zl/tools/screenshot?width="+width+"&height="+height+"&x_zl_client_token="+self.clientToken;html='<a class=download-button style="'+css.join(';')+'" ';html+='onMouseOver="this.style.background=\'url('+baseURL+'BTN_download_hover.png)\'" '
html+='onMouseOut="this.style.background=\'url('+baseURL+'BTN_download.png)\'" '
html+='href="'+screenshoturl+'" target="_blank"'
html+='></a>'
return $(html).appendTo($container);}
var streamIdle={isIdle:false,lastActivity:0,initialWindow:10000,initialTimeout:5000,extendedTimeout:30000,intervalHandle:-1,monitorStart:0};function setStreamIdleMonitorState(state){if(state&&streamIdle.intervalHandle===-1){streamIdle.lastActivity=streamIdle.monitorStart=Date.now();streamIdle.intervalHandle=setInterval(function(){var now=Date.now(),lastActivity=now-streamIdle.lastActivity,monitorStart=now-streamIdle.monitorStart,timeout=monitorStart<streamIdle.initialWindow?streamIdle.initialTimeout:streamIdle.extendedTimeout;if(!streamIdle.isIdle&&lastActivity>timeout){streamIdle.isIdle=true;if(self.options.idleOverlay){setIdleOverlayState(true);}}
if(self.options.idleDisconnect&&lastActivity>self.options.idleDisconnect){console.log('[idleDisconnect] Disconnecting from stream after '+(Math.round(lastActivity/100)/10)+' seconds of inactivity.');self.disconnect(function(){self.onStreamDisconnect&&self.onStreamDisconnect();});}},2000);}else{if(self.options.idleOverlay){setIdleOverlayState(false);}
clearInterval(streamIdle.intervalHandle);streamIdle.intervalHandle=-1;}}
function clearStreamIdleTimeout(){streamIdle.lastActivity=Date.now();if(streamIdle.isIdle){streamIdle.isIdle=false;setIdleOverlayState(false);}}
function setIdleOverlayState(state,callback){var options=self.options,$container,$overlay,currentlyVisible;if(!options.idleOverlay){if(callback){callback();}
return;}
if(options.parent&&document.getElementById(options.parent)){$container=$('#'+options.parent);}else{if(callback){callback();}
return;}
$overlay=ensureIdleOverlayHTML($container);currentlyVisible=$overlay.hasClass('visible');if(state&&!currentlyVisible){console.log('[setIdleOverlayState] Showing overlay.');animateIdleOverlay($container,true,callback);}else if(!state&&currentlyVisible){console.log('[setIdleOverlayState] Hiding overlay.');animateIdleOverlay($container,false,callback);}}
function ensureIdleOverlayHTML($container){var options=self.options,$grad,$cursor,$leftArrow,$rightArrow;$overlay=$container.find('> .idle-overlay'),width=options.resolution.x,height=options.resolution.y,baseURL=self.assetURL('img/idle/'),spriteURL=baseURL+'spritesheet.png';if($overlay.length>0){return $overlay;}
$overlay=$('<div class="idle-overlay" />').css({'position':'absolute','z-index':90,'display':'none','width':'100%','height':'100%','overflow':'hidden','pointer-events':'none','background':'rgba(195, 195, 195, 0.51)'}).on('mousedown',function(){clearStreamIdleTimeout();e.preventDefault();});$grad=$('<div class="grad" />').css({'position':'absolute','top':'50%','left':'50%','margin':'-48px 0 0 -150px','width':'300px','height':'96px'}).appendTo($overlay);$leftArrow=$('<div class="button left" />').css({'position':'absolute','top':'0','left':'0','width':'96px','height':'96px','border-radius':'50%','background':'#cbcfd0 url('+spriteURL+') no-repeat 14px 23px'}).appendTo($grad);$rightArrow=$('<div class="button right" />').css({'position':'absolute','top':'0','right':'0','width':'96px','height':'96px','border-radius':'50%','background':'#cbcfd0 url('+spriteURL+') no-repeat -84px 23px'}).appendTo($grad);return $overlay.prependTo($container);}
function animateIdleOverlay($container,state,doneCallback){'use strict';var anim,options=self.options,$overlay=$container.find('> .idle-overlay');if($overlay.length<=0){return false;}
anim=state?'fadeIn':'fadeOut';$overlay.toggleClass('visible',state).stop(true,true)[anim](500,function(){if(doneCallback){doneCallback();}});}
this.compareVersions=function(a,b){var pa=a.split('.');var pb=b.split('.');for(var i=0;i<3;i++){var na=Number(pa[i]);var nb=Number(pb[i]);if(na>nb)return 1;if(nb>na)return-1;if(!isNaN(na)&&isNaN(nb))return 1;if(isNaN(na)&&!isNaN(nb))return-1;}
return 0;}
function setupConsoleLogShim(){var types=['log','debug','warn','error','info'],cons={log:function(){}},func=function(){console.log.apply(this,arguments);};if(!window.console){window.console=cons;}
types.forEach(function(t){if(!window.console[t]){window.console[t]=func;}});}
function injectStreamWrapper(options)
{var container=options.parent?document.getElementById(options.parent)||document.body:document.body;var wrapper=document.createElement('div');wrapper.style.position='relative';wrapper.style.width=options.resolution.x+'px';wrapper.style.height=options.resolution.y+'px';wrapper.style['-webkit-user-drag']=wrapper.style['user-drag']='none';wrapper.style['-webkit-user-select']=wrapper.style['user-select']='none';wrapper.id='streamWrapper';container.appendChild(wrapper);options.parent=wrapper.id;self.streamWrapper=wrapper;}
self.autoUpdateResize=function()
{setTimeout(function(){var $w=$(self.streamWrapper),width=$w.width(),height=$w.height();console.log('[autoResize] Updating resolution:',width,'x',height);self.updateOutputResolution(width,height,true);},1000);};var orphanedParentMonitor={intervalHandle:-1,interval:5000};function setOrphanedParentMonitorState(state){if(state&&orphanedParentMonitor.intervalHandle===-1){orphanedParentMonitor.intervalHandle=setInterval(function(){if(isParentOrphaned()){console.warn('[orphanedParentMonitor] Disconnecting from stream due to stream wrapper being absent from DOM.');self.disconnect(function(){self.onStreamDisconnect&&self.onStreamDisconnect();});}},orphanedParentMonitor.interval);}else if(!state){clearInterval(orphanedParentMonitor.intervalHandle);orphanedParentMonitor.intervalHandle=-1;}}
function setupAudiCodeDetector(){console.log('[setupAudiCodeDetector] Binding event handler.');var intervalHandle=-1;function _clearInterval(){if(intervalHandle!==-1){clearInterval(intervalHandle);intervalHandle=-1;}}
$('body').on('click','.nm-audicode',function(){var startTime=Date.now();console.log('[setupAudiCodeDetector] Actively waiting...');_clearInterval();intervalHandle=setInterval(function(){var code=undefined;if($('.nm-j-audicode').length>0){code=$('.nm-j-audicode').html();}
if(typeof code=='string'&&code.length>=6){console.log('[setupAudiCodeDetector] Code found: '+code);console.log('[setupAudiCodeDetector] length:'+code.length)
audiCode=code;audiCodeSent=false;attemptAudiCodeSubmission();_clearInterval();}else{if(startTime>Date.now()+5000){console.log('[setupAudiCodeDetector] Failed to find code. Gave up.');_clearInterval();}}},20);});}
$(setupAudiCodeDetector);self.submitTrackingCode=function(code){$.ajax({url:self.instanceURL()+'/zl/tools/codeFromClient',headers:{'x-zl-client-token':self.clientToken},dataType:'json',data:{code:code},type:'post',cache:false,success:function(){console.log('[submitTrackingCode] Code sent successfully.');},error:function(){console.log('[submitTrackingCode] Network error while sending code.');},timeout:3000});}
function attemptAudiCodeSubmission(){if(audiCodeSent||!audiCode||!self.clientToken||!self.cloudIp){console.log('[submitAudiCode] Not sending code. Not ready.');return;}
audiCodeSent=true;self.submitTrackingCode(audiCode);}
function isParentOrphaned(){if(!self.streamWrapper){return false;}else{return!jQuery.contains(document,self.streamWrapper);}}
self.moveStream=function(domElementId)
{var err,container=document.getElementById(domElementId);if(!container){err={message:'Could not find element matching id: '+domElementId,context:'moveStream'};self.onError&&self.onError(err);return;}
self.autoUpdateResize();container.appendChild(self.streamWrapper);};self.updateOutputResolution=function(width,height,noResize){if(!noResize){$(self.streamWrapper).width(width).height(height);}
if(self.streamOutput.updateOutputResolution){self.streamOutput.updateOutputResolution(width,height);}};};function getParameterByName(name,url){if(!url)url=window.location.href;name=name.replace(/[\[\]]/g,"\\$&");var regex=new RegExp("[?&]"+name+"(=([^&#]*)|&|#|$)"),results=regex.exec(url);if(!results)return null;if(!results[2])return'';return decodeURIComponent(results[2].replace(/\+/g," "));}
if(typeof Object.assign!='function'){Object.assign=function(target){'use strict';if(target==null){throw new TypeError('Cannot convert undefined or null to object');}
target=Object(target);for(var index=1;index<arguments.length;index++){var source=arguments[index];if(source!=null){for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}}
return target;};}
window.zlbolt=new Zlbolt();zlbolt=window.zlbolt;;window.Zlbolt=window.Zlbolt||{};Zlbolt.MultipartStreamReader=function(options){'use strict';var self=this;var container,canvas,xhr,ctx;options=options||{};var MAX_STREAM_SIZE=options.maxStreamSize||1024*1024*2;var BOUNDARY_NAME='--boundarydonotcross';self.connect=function(url,chunkHandler){if(xhr){xhr.abort();}
var lastIndex=0;xhr=new XMLHttpRequest();xhr.open('GET',url,true);if(xhr.overrideMimeType){xhr.overrideMimeType('text/plain; charset=x-user-defined');}
xhr.onprogress=function(e){var resp,boundaryName,nextBoundary,responseBody,frameData;resp=this.response.slice(lastIndex);boundaryName=BOUNDARY_NAME+'\r\n';nextBoundary=resp.indexOf(boundaryName);if(nextBoundary===-1||(lastIndex===0&&nextBoundary===0)){if(lastIndex===0&&nextBoundary===0){lastIndex+=boundaryName.length;}
return;}
if(this.response.length>MAX_STREAM_SIZE){self.reconnect(url,chunkHandler);return;}
responseBody=resp.slice(resp.indexOf('\r\n\r\n')+4,nextBoundary);frameData=self.stringToByteArray(responseBody);chunkHandler(frameData);lastIndex+=nextBoundary+boundaryName.length;};xhr.send(null);};self.disconnect=function(){if(xhr){xhr.abort();xhr=null;}};self.reconnect=function(url,chunkHandler){self.disconnect();self.connect(url,chunkHandler);};self.stringToByteArray=function(resp){var data,i,c,byte,len;data=new Uint8Array(resp.length);for(i=0,len=resp.length;i<len;i++){c=resp.charCodeAt(i);byte=c&0xff;data[i]=byte;}
return data;};};;window.Zlbolt=window.Zlbolt||{};Zlbolt.Outputs={getSupportedOutput:function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){'use strict';var outputsToCheck,_chooseOutput,_checkNextOutput,_maxRetries=3,override=Zlbolt.Outputs._checkForOverride();outputsToCheck=[Zlbolt.Outputs.VP9WebSocket,Zlbolt.Outputs.MJPEGCanvas2DWebSocket,Zlbolt.Outputs.MJPEGImageTag,Zlbolt.Outputs.MJPEGCanvas2D,Zlbolt.Outputs.MJPEGWebGL,Zlbolt.Outputs.YUVWebGL];_chooseOutput=function(handlerClass){try{console.log('[_chooseOutput] Chosen: '+handlerClass.className);var streamOutput=new handlerClass(zlbolt,options);streamOutput.initialise();callback(streamOutput);}catch(e){console.warn('[_chooseOutput]',e);callback(null);}};_checkNextOutput=function(index,retries){var handlerClass=outputsToCheck[index];if(!handlerClass){if(retries>=_maxRetries)
{console.log("Max retries reached.")
return}
console.log("Checked all output methods, retrying "+String(retries+1)+" of "+_maxRetries+" times.")
_checkNextOutput(0,retries+1)}
handlerClass.isSupported(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,function(result){if(result){_chooseOutput(handlerClass);}else{_checkNextOutput(index+1,retries);}});};if(override){console.log('[getSupportedOutput] Found override...');_chooseOutput(override);}else{_checkNextOutput(0,0);}},_checkForOverride:function(){return({'MJPEGImageTag':Zlbolt.Outputs.MJPEGImageTag,'MJPEGCanvas2DWebSocket':Zlbolt.Outputs.MJPEGCanvas2DWebSocket,'VP9WebSocket':Zlbolt.Outputs.VP9WebSocket,'MJPEGCanvas2D':Zlbolt.Outputs.MJPEGCanvas2D,'MJPEGWebGL':Zlbolt.Outputs.MJPEGWebGL,'YUVWebGL':Zlbolt.Outputs.YUVWebGL})[Zlbolt.Outputs._getQueryStringVar('o')]||null;},_getQueryStringVar:function(variable){var query=window.location.search.substring(1),vars=query.split('&'),i;for(i=0;i<vars.length;i++){var pair=vars[i].split('=');if(pair[0]==variable){return pair[1];}}
return null;},_appendPortFragment:function(options,cloudIp,connectionType){var output=cloudIp.split(':')[0],ports={WEBSOCKET:1937,MJPEG:1936};if(options.localControl&&connectionType in ports){output+=':'+ports[connectionType];}
return output;}};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.MJPEGCanvas2D=function(zlbolt,options){'use strict';var self=this;var container,canvas,ctx,httpStream,container2,canvas2,ctx2;self.initialise=function(){httpStream=new Zlbolt.MultipartStreamReader();container=options.parent?document.getElementById(options.parent)||document.body:document.body;canvas=document.createElement('canvas');canvas.width=options.resolution.x;canvas.height=options.resolution.y;canvas.style.display='block';canvas.style.width='100%';canvas.style.height='100%';canvas.style.outline=canvas.style.border='none';canvas.style['-webkit-user-drag']=canvas.style['user-drag']='none';canvas.style['-webkit-user-select']=canvas.style['user-select']='none';if(options.streamClass)
canvas.className=options.streamClass;ctx=canvas.getContext('2d');container.appendChild(canvas);self.streamElement=canvas;if(options.thumbparent)
{container2=document.getElementById(options.thumbparent);canvas2=document.createElement('canvas');canvas2.width=options.thumbresolution.x;canvas2.height=options.thumbresolution.y;canvas2.style.outline=canvas2.style.border='none';ctx2=canvas2.getContext('2d');container2.appendChild(canvas2);$(container2).on("click",function(){});}};self.destroy=function(){self.disconnect();if(canvas){container.removeChild(canvas);self.streamElement=null;}};self.connect=function(cloudIp,instanceUsesSSL,clientToken){if(instanceUsesSSL){var instanceURL="https://"+String(cloudIp);}else{var instanceURL="http://"+String(cloudIp);}
httpStream.connect(instanceURL+'/stream?ajax=1&x_zl_client_token='+clientToken,self.handleFrame);};self.disconnect=function(){httpStream.disconnect();};self.reconnect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();setTimeout(function(){self.connect(cloudIp,instanceUsesSSL,clientToken);},10);};self.handleFrame=function(frameData){var dataURI=self.makeDataURI(frameData,'image/jpeg');var image=new Image();image.onerror=function(a,b,c){console.warn('[handleFrame] Failed to load image frame.');self.disconnect();};image.onload=function(){window.requestAnimationFrame(function(){self.drawScene(image);});};image.src=dataURI;};self.makeDataURI=function(data,mimeType){var encodedData,i,stringData=[],len=data.length,chunkSize=0xffff;for(i=0;i*chunkSize<len;i++){stringData.push(String.fromCharCode.apply(null,data.subarray(i*chunkSize,(i+1)*chunkSize)));}
encodedData=window.btoa(stringData.join(''));return'data:'+mimeType+';base64,'+encodedData;};self.drawScene=function(image){ctx.fillRect(0,0,canvas.width,canvas.height);ctx.drawImage(image,0,0,canvas.width,canvas.height);if(canvas2)
{ctx2.fillRect(0,0,canvas2.width,canvas2.height);ctx2.drawImage(image,0,0,canvas2.width,canvas2.height);}};};Zlbolt.Outputs.MJPEGCanvas2D.className='MJPEGCanvas2D';Zlbolt.Outputs.MJPEGCanvas2D.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){var result=false,canvas;try{canvas=document.createElement('canvas');result=!!canvas.getContext('2d');}catch(e){}
setTimeout(function(){callback(result);},10);};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.MJPEGCanvas2DWebSocket=function(zlbolt,options){'use strict';var self=this;var container,canvas,ctx,ws,container2,canvas2,ctx2;self.maxRetries=10;self.currentBackoff=1000;self.currentFullConnectBackoff=1000;self.maxFullConnectBackoff=30000;self.backoffModifier=2;self.connectionMade=false;self.reconnecting=false;self.recentReconnect=false;self.fullReconnectTimeoutHandle=null;self.allowReconnect=true;self.totalFrames=0;self.totalFramesRendered=0;self.totalFramesSkipped=0;self.lastAnimFrameReqHandle=-1;self.lastImage=null;var isIEOrEdgeBrowser=/Edge\/\d./i.test(navigator.userAgent);self.frameStats={frameTime:0,fps:0,lastFrameTime:0,filterStrength:5};self.initialise=function(){container=options.parent?document.getElementById(options.parent)||document.body:document.body;canvas=document.createElement('canvas');canvas.width=options.resolution.x;canvas.height=options.resolution.y;canvas.style.display='block';canvas.style.width='100%';canvas.style.height='100%';if(navigator.appVersion.indexOf('MSIE 10')!==-1){canvas.style['min-height']='100%';}
canvas.style.outline=canvas.style.border='none';canvas.style['-webkit-user-drag']=canvas.style['user-drag']='none';canvas.style['-webkit-user-select']=canvas.style['user-select']='none';if(options.streamClass){canvas.className=options.streamClass;}
ctx=canvas.getContext('2d');container.appendChild(canvas);self.streamElement=canvas;if(options.thumbparent){self.initialiseThumbCanvas();}};self.initialiseThumbCanvas=function(){container2=document.getElementById(options.thumbparent);canvas2=document.createElement('canvas');canvas2.width=options.thumbresolution.x;canvas2.height=options.thumbresolution.y;canvas2.style.outline=canvas2.style.border='none';ctx2=canvas2.getContext('2d');container2.appendChild(canvas2);$(container2).on('click',function(){});};self.onOpen=function(){console.log('[onOpen] Opened connection.');self.connectionMade=true;self.reconnecting=false;self.allowReconnect=true;if(self.fullReconnectTimeoutHandle)
window.clearTimeout(self.fullReconnectTimeoutHandle)
self.fullReconnectTimeoutHandle=window.setTimeout(function(){self.recentReconnect=false;self.currentFullConnectBackoff=1000;},60000);ws.send(self.encodeCmdData('RESIZE',[options.resolution.x,options.resolution.y]));};self.onMessage=function(e){if(typeof e.data==='string'){self.handleData(e.data);}else{self.handleFrame(e.data);}};self.onClose=function(){console.log('[onClose] Closed connection.');self.connectionMade=false;if(!self.reconnecting&&self.allowReconnect){self.currentBackoff=1000;if(!self.recentReconnect){self.retryConnection(10);}
else{self.currentFullConnectBackoff*=self.backoffModifier;if(self.currentFullConnectBackoff>self.maxFullConnectBackoff)
self.currentFullConnectBackoff=self.maxFullConnectBackoff
window.setTimeout(function(){self.retryConnection(10);},self.currentFullConnectBackoff)}}};self.retryConnection=function(retries){self.recentReconnect=true;ws.close();if(retries<=0){console.log("[retryConnection] Maximum retries reached")
return}
retries--;self.reconnecting=true;console.log("[retryConnection] Retrying connection")
self.connect(self.cloudIp,self.instanceUsesSSL,self.clientToken)
window.setTimeout(function(){if(!self.connectionMade)
{self.currentBackoff*=self.backoffModifier
self.retryConnection(retries)}},self.currentBackoff);};self.destroy=function(){self.disconnect(false);if(canvas){container.removeChild(canvas);self.streamElement=null;}
if(canvas2){container2.removeChild(canvas2);}};self.connect=function(cloudIp,instanceUsesSSL,clientToken){var params,proto=instanceUsesSSL?'wss://':'ws://';self.cloudIp=cloudIp;self.instanceUsesSSL=instanceUsesSSL;self.clientToken=clientToken;params={'x_zl_client_token':clientToken,'width':options.resolution.x,'height':options.resolution.y};var host=Zlbolt.Outputs._appendPortFragment(options,self.cloudIp,'WEBSOCKET');ws=new WebSocket(proto+host+'/ws?'+$.param(params));ws.addEventListener('open',self.onOpen);ws.addEventListener('message',self.onMessage);ws.addEventListener('close',self.onClose);};self.disconnect=function(allowReconnect){if(allowReconnect!=undefined)
self.allowReconnect=allowReconnect;ws.close();};self.reconnect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();setTimeout(function(){self.connect(cloudIp,instanceUsesSSL,clientToken);},10);};self.decodeCmdData=function(data){var split=data.split(':');return{cmd:split[0],args:split.slice(1)};};self.encodeCmdData=function(cmd,args){return[cmd].concat(args).join(':');};self.sendCmdData=function(cmd,args){ws.send(self.encodeCmdData(cmd,args));};self.sendCameraMousePos=function(pos){self.sendCmdData('SETCAMMOUSEPOS:'+pos.join(':'));};self.handleData=function(data){try{var cmdData=self.decodeCmdData(data);if(cmdData.cmd=='PING'){zlbolt.streamMetrics.pingIndex=parseInt(cmdData.args[0]);zlbolt.streamMetrics.frameDelay=parseInt(cmdData.args[1]);zlbolt.streamMetrics.lastPing=parseInt(cmdData.args[2]);zlbolt.streamMetrics.targetFPS=parseInt(cmdData.args[3]);zlbolt.streamMetrics.connectionQuality=(cmdData.args.length>=5?parseInt(cmdData.args[4]):'N/A');zlbolt.streamMetrics.currentRendererFPS=(cmdData.args.length>=7?parseFloat(cmdData.args[6]):'N/A');zlbolt.streamMetrics.currentEncoderFPS=(cmdData.args.length>=6?parseFloat(cmdData.args[5]):'N/A');zlbolt.streamMetrics.currentClientFPS=self.frameStats.fps;zlbolt.streamMetrics.outputMethod=Zlbolt.Outputs.MJPEGCanvas2DWebSocket.className;zlbolt.streamMetrics.outputResolution=(cmdData.args.length>=8?cmdData.args[7]:'N/A');zlbolt.onStreamMetricsUpdated&&zlbolt.onStreamMetricsUpdated(zlbolt.streamMetrics);ws.send(self.encodeCmdData('PONG',[cmdData.args[0],self.totalFrames]));}else if(cmdData.cmd=='VERSION'){zlbolt.cameraMoveFast=true;console.log('Plugin supports Web Socket camera movement messages.');}}catch(e){console.warn('[handleData] ',e);}
};function destroyImage(image){URL.revokeObjectURL(image.src);image.onload=null;image.onerror=null;if(!isIEOrEdgeBrowser){image.src='about:blank';}}
self.updateOutputResolution=function(width,height){ws.send(self.encodeCmdData('RESIZE',[width,height]));};self.handleFrame=function(frameData){self.totalFrames++;zlbolt.streamMetrics.frameSize=String(Math.round(frameData.size/1024))+' KiB';var frameRenderDelay=self.totalFrames-self.totalFramesSkipped-self.totalFramesRendered;if(frameRenderDelay>=2){console.log('[handleFrame] Skipping due to client-side latency:',frameRenderDelay);self.totalFramesSkipped++;return;}
var image=new Image();image.onerror=function(a,b,c){console.warn('[handleFrame] Failed to load image frame.');self.disconnect();};image.onload=function(){if(self.lastAnimFrameReqHandle!==-1&&document.hidden){console.log('[handleFrame] Dropping in-flight frame, as tab is inactive:',self.lastAnimFrameReqHandle);window.cancelAnimationFrame(self.lastAnimFrameReqHandle);if(self.lastImage){destroyImage(self.lastImage);}}
self.lastAnimFrameReqHandle=window.requestAnimationFrame(function(){self.totalFramesRendered++;self.updateFrameRate(self.frameStats);self.drawScene(image);destroyImage(image);});self.lastImage=image;};image.src=URL.createObjectURL(frameData);};self.drawScene=function(image){ctx.clearRect(0,0,canvas.width,canvas.height);ctx.drawImage(image,0,0,canvas.width,canvas.height);if(canvas2){ctx2.clearRect(0,0,canvas2.width,canvas2.height);ctx2.drawImage(image,0,0,canvas2.width,canvas2.height);}};self.updateFrameRate=function(stats){var now=Date.now(),curFrameTime;if(stats.lastFrameTime<=0){stats.lastFrameTime=now;}
curFrameTime=now-stats.lastFrameTime;stats.frameTime+=(curFrameTime-stats.frameTime)/stats.filterStrength;stats.lastFrameTime=now;stats.fps=Math.round(1000/stats.frameTime*10)/10;};};Zlbolt.Outputs.MJPEGCanvas2DWebSocket.className='MJPEGCanvas2DWebSocket';Zlbolt.Outputs.MJPEGCanvas2DWebSocket.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){'use strict';var instanceURL,canvas,result=false,callbackFired=false,_fireCallback;var host=Zlbolt.Outputs._appendPortFragment(options,cloudIp,'WEBSOCKET');if(instanceUsesSSL){instanceURL='wss://'+String(host);}else{instanceURL='ws://'+String(host);}
_fireCallback=function(result,msg){if(!callbackFired){callbackFired=true;if(typeof msg=='string'){console.debug('[MJPEGCanvas2DWebSocket.isSupported] '+result);}
callback(result);}};if(!window.WebSocket){_fireCallback(false,'WebSocket not supported.');return;}
try{canvas=document.createElement('canvas');result=!!canvas.getContext('2d')||!window.WebSocket;}catch(e){}
if(!result){setTimeout(function(){_fireCallback(result,'Failed to create canvas.');},10);return;}
setTimeout(function(){_fireCallback(false,'Timeout elapsed.');},8000);var ws=new WebSocket(instanceURL+'/ws?x_zl_client_token='+clientToken);ws.onopen=function(){_fireCallback(true);ws.close();};ws.onclose=function(){_fireCallback(false,'WebSocket closed unexpectedly.');};ws.onerror=function(){_fireCallback(false,'WebSocket error occurred.');};};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.MJPEGWebGL=function(zlbolt,options){'use strict';var self=this;var canvas;var gl;var verticesVBO;var texcoordVBO;var shaderProgram;var texture;var VERTEX_ATT_LOC;var TEXCOORD_ATT_LOC;var container;var imageWebGL;var httpStream;self.initialise=function(){httpStream=new Zlbolt.MultipartStreamReader();container=options.parent?document.getElementById(options.parent)||document.body:document.body;canvas=document.createElement('canvas');canvas.width=options.resolution.x;canvas.height=options.resolution.y;canvas.style.outline=canvas.style.border='none';canvas.style['-webkit-user-drag']=canvas.style['user-drag']='none';canvas.style['-webkit-user-select']=canvas.style['user-select']='none';if(options.streamClass)
canvas.className=options.streamClass;container.appendChild(canvas);self.streamElement=canvas;self.initWebGL(canvas);self.initShaders();self.initBuffers();};self.destroy=function(){self.disconnect();if(canvas){parent.removeChild(canvas);self.streamElement=null;}};self.connect=function(cloudIp,instanceUsesSSL,clientToken){if(instanceUsesSSL){var instanceURL="https://"+String(cloudIp);}else{var instanceURL="http://"+String(cloudIp);}
httpStream.connect(instanceURL+'/stream?ajax=1&x_zl_client_token='+clientToken,self.handleFrame);};self.disconnect=function(){httpStream.disconnect();};self.reconnect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();setTimeout(function(){self.connect(cloudIp,instanceUsesSSL,clientToken);},10);};self.handleFrame=function(frameData){var dataURI=self.makeDataURI(frameData,'image/jpeg');texture.image=new Image();texture.image.onload=function(){gl.bindTexture(gl.TEXTURE_2D,texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,this);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.bindTexture(gl.TEXTURE_2D,null);window.requestAnimationFrame(self.drawScene);};texture.image.src=dataURI;};self.makeDataURI=function(data,mimeType){var stringData=String.fromCharCode.apply(null,data);var encodedData=window.btoa(stringData);return'data:'+mimeType+';base64,'+encodedData;};self.initWebGL=function(canvas){try{gl=canvas.getContext('webgl',{alpha:false,depth:false,preserveDrawingBuffer:true,antialias:false,stencil:false});}catch(e){}
if(!gl){console.warn('Unable to initialise WebGL.');}};self.initBuffers=function(){gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,true);verticesVBO=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,verticesVBO);var vertices=[-1.0,-1.0,0.0,1.0,-1.0,0.0,-1.0,1.0,0.0,1.0,1.0,0.0];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertices),gl.STATIC_DRAW);texcoordVBO=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texcoordVBO);var texCoords=[0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0,];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoords),gl.STATIC_DRAW);texture=gl.createTexture();};self.drawScene=function(){gl.clear(gl.COLOR_BUFFER_BIT);gl.bindBuffer(gl.ARRAY_BUFFER,verticesVBO);gl.vertexAttribPointer(VERTEX_ATT_LOC,3,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,texcoordVBO);gl.vertexAttribPointer(TEXCOORD_ATT_LOC,2,gl.FLOAT,false,0,0);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture);gl.uniform1i(gl.getUniformLocation(shaderProgram,'textureSampler'),0);gl.drawArrays(gl.TRIANGLE_STRIP,0,4);};self.initShaders=function(){console.log('[initShaders] Attempting to initialise shaders.');var vertexShaderSrc="attribute vec3 position;\n"+
"attribute vec2 texCoord0;\n"+
"varying vec2 v_texcoord;\n"+
"void main() {\n"+
"gl_Position = vec4(position, 1.0);\n"+
"v_texcoord = texCoord0;\n"+
"}";var fragmentShaderSrc="precision mediump float;\n"+
"uniform sampler2D textureSampler;\n"+
"varying vec2 v_texcoord;\n"+
"void main() {\n"+
"gl_FragColor = texture2D(textureSampler, vec2(v_texcoord.s, v_texcoord.t));\n"+
"}";var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexShaderSrc);gl.compileShader(vertexShader);if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){console.warn('[initShaders] Failed to compile vertex shader: '+gl.getShaderInfoLog(vertexShader));return;}
var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentShaderSrc);gl.compileShader(fragmentShader);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){console.warn('[initShaders] Failed to compile fragment shader: '+gl.getShaderInfoLog(fragmentShader));return;}
shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){console.warn('[initShaders] Unable to link shaders.');}
gl.useProgram(shaderProgram);VERTEX_ATT_LOC=gl.getAttribLocation(shaderProgram,'position');gl.enableVertexAttribArray(VERTEX_ATT_LOC);TEXCOORD_ATT_LOC=gl.getAttribLocation(shaderProgram,'texCoord0');gl.enableVertexAttribArray(TEXCOORD_ATT_LOC);console.log('[initShaders] Shaders initialised successfully.');};};Zlbolt.Outputs.MJPEGWebGL.className='MJPEGWebGL';Zlbolt.Outputs.MJPEGWebGL.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){var result=false,canvas;try{canvas=document.createElement('canvas');result=!!window.WebGLRenderingContext&&canvas.getContext('webgl');}catch(e){}
setTimeout(function(){callback(result);},10);};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.YUVWebGL=function(zlbolt,options){'use strict';var self=this;var canvas;var gl;var verticesVBO;var texcoordVBO;var shaderProgram;var VERTEX_ATT_LOC;var TEXCOORD_ATT_LOC;var texture;var width=720,height=360;var container;var httpStream;self.initialise=function(){httpStream=new Zlbolt.MultipartStreamReader({maxStreamSize:1024*1024*5});container=options.parent?document.getElementById(options.parent)||document.body:document.body;canvas=document.createElement('canvas');canvas.width=options.resolution.x;canvas.height=options.resolution.y;canvas.style.outline=canvas.style.border='none';canvas.style['-webkit-user-drag']=canvas.style['user-drag']='none';canvas.style['-webkit-user-select']=canvas.style['user-select']='none';if(options.streamClass)
canvas.className=options.streamClass;container.appendChild(canvas);self.streamElement=canvas;self.initWebGL(canvas);self.initShaders();self.initBuffers();};self.destroy=function(){self.disconnect();if(canvas){parent.removeChild(canvas);self.streamElement=null;}};self.connect=function(cloudIp,instanceUsesSSL,clientToken){if(instanceUsesSSL){var instanceURL="https://"+String(cloudIp);}else{var instanceURL="http://"+String(cloudIp);}
httpStream.connect(instanceURL+'/stream_webgl?ajax=1&x_zl_client_token='+clientToken,self.handleFrame);};self.disconnect=function(){httpStream.disconnect();};self.reconnect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();setTimeout(function(){self.connect(cloudIp,instanceUsesSSL,clientToken);},10);};self.handleFrame=function(frameData){texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.LUMINANCE,width,height*1.5,0,gl.LUMINANCE,gl.UNSIGNED_BYTE,frameData);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.bindTexture(gl.TEXTURE_2D,null);window.requestAnimationFrame(self.drawScene);};self.initWebGL=function(canvas){try{gl=canvas.getContext('webgl',{alpha:false,depth:false,preserveDrawingBuffer:true,antialias:false,stencil:false});}catch(e){}
if(!gl){console.warn('Unable to initialise WebGL.');}};self.initBuffers=function(){gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,true);verticesVBO=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,verticesVBO);var vertices=[-1.0,-1.0,0.0,1.0,-1.0,0.0,-1.0,1.0,0.0,1.0,1.0,0.0];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertices),gl.STATIC_DRAW);texcoordVBO=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texcoordVBO);var texCoords=[0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0,];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoords),gl.STATIC_DRAW);}
self.drawScene=function(){gl.clear(gl.COLOR_BUFFER_BIT);gl.bindBuffer(gl.ARRAY_BUFFER,verticesVBO);gl.vertexAttribPointer(VERTEX_ATT_LOC,3,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,texcoordVBO);gl.vertexAttribPointer(TEXCOORD_ATT_LOC,2,gl.FLOAT,false,0,0);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture);gl.uniform1i(gl.getUniformLocation(shaderProgram,'textureSampler'),0);gl.drawArrays(gl.TRIANGLE_STRIP,0,4);};self.initShaders=function(){console.log('[initShaders] Attempting to initialise shaders.');var vertexShaderSrc="attribute vec3 position;\n"+
"attribute vec2 texCoord0;\n"+
"varying vec2 v_texcoord;\n"+
"void main() {\n"+
"gl_Position = vec4(position, 1.0);\n"+
"v_texcoord = texCoord0;\n"+
"}";var fragmentShaderSrc="precision mediump float;\n"+
"uniform float imageWidth;\n"+
"uniform float imageHeight;\n"+
"uniform sampler2D textureSampler;\n"+
"varying vec2 v_texcoord;\n"+
"float getYPixel(vec2 position) {\n"+
"position.y = (position.y * 2.0 / 3.0) + (1.0 / 3.0);\n"+
"return texture2D(textureSampler, position).x;\n"+
"}\n"+
"vec2 mapCommon(vec2 position, float planarOffset) {\n"+
"planarOffset += (imageWidth * floor(position.y / 2.0)) / 2.0 +"+
"floor((imageWidth - 1.0 - position.x) / 2.0);\n"+
"float x = floor(imageWidth - 1.0 - floor(mod(planarOffset, imageWidth)));\n"+
"float y = floor(planarOffset / imageWidth);\n"+
"return vec2((x + 0.5) / imageWidth, (y + 0.5) / (1.5 * imageHeight));\n"+
"}\n"+
"vec2 mapU(vec2 position) {\n"+
"float planarOffset = (imageWidth * imageHeight) / 4.0;\n"+
"return mapCommon(position, planarOffset);\n"+
"}\n"+
"vec2 mapV(vec2 position) {\n"+
"return mapCommon(position, 0.0);\n"+
"}\n"+
"void main() {\n"+
"vec2 pixelPosition = vec2(floor(imageWidth * v_texcoord.x),\n"+
"floor(imageHeight * v_texcoord.y));\n"+
"pixelPosition -= vec2(0.5, 0.5);\n"+
"float yChannel = getYPixel(v_texcoord);\n"+
"float uChannel = texture2D(textureSampler, mapU(pixelPosition)).x;\n"+
"float vChannel = texture2D(textureSampler, mapV(pixelPosition)).x;\n"+
"vec4 channels = vec4(yChannel, uChannel, vChannel, 1.0);\n"+
"mat4 conversion = mat4(1.0,  0.0,	1.402, -0.701,\n"+
"1.0, -0.344, -0.714,  0.529,\n"+
"1.0,  1.772,  0.0,   -0.886,\n"+
"0, 0, 0, 0);\n"+
"vec3 rgb = (channels * conversion).xyz;\n"+
"gl_FragColor = vec4(rgb, 1.0);\n"+
"}";var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexShaderSrc);gl.compileShader(vertexShader);if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){console.warn('[initShaders] Failed to compile vertex shader: '+gl.getShaderInfoLog(vertexShader));return;}
var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentShaderSrc);gl.compileShader(fragmentShader);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){console.warn('[initShaders] Failed to compile fragment shader: '+gl.getShaderInfoLog(fragmentShader));return;}
shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){console.warn('[initShaders] Unable to link shaders.');}
gl.useProgram(shaderProgram);VERTEX_ATT_LOC=gl.getAttribLocation(shaderProgram,'position');gl.enableVertexAttribArray(VERTEX_ATT_LOC);TEXCOORD_ATT_LOC=gl.getAttribLocation(shaderProgram,'texCoord0');gl.enableVertexAttribArray(TEXCOORD_ATT_LOC);gl.uniform1f(gl.getUniformLocation(shaderProgram,'imageWidth'),width);gl.uniform1f(gl.getUniformLocation(shaderProgram,'imageHeight'),height);console.log('[initShaders] Shaders initialised successfully.');};};Zlbolt.Outputs.YUVWebGL.className='YUVWebGL';Zlbolt.Outputs.YUVWebGL.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){var result=false,canvas;try{canvas=document.createElement('canvas');result=!!window.WebGLRenderingContext&&canvas.getContext('webgl');}catch(e){}
setTimeout(function(){callback(result);},10);};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.MJPEGImageTag=function(zlbolt,options){'use strict';var self=this;var image;var container;self.initialise=function(){container=options.parent?document.getElementById(options.parent)||document.body:document.body;};self.destroy=function(){self.disconnect();};self.connect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();image=document.createElement('img');if(instanceUsesSSL){var instanceURL="https://"+String(cloudIp);}else{var instanceURL="http://"+String(cloudIp);}
image.src=instanceURL+'/stream?x_zl_client_token='+clientToken;image.width=options.resolution.x;image.height=options.resolution.y;image.style.display='block';image.style.width='100%';image.style.height='100%';image.style.outline=image.style.border='none';image.style['-webkit-user-drag']=image.style['user-drag']='none';image.style['-webkit-user-select']=image.style['user-select']='none';image.ondragstart=function(){return false;};if(options.streamClass)
image.className=options.streamClass;container.appendChild(image);self.streamElement=image;};self.disconnect=function(){if(image){container.removeChild(image);self.streamElement=null;}};self.reconnect=function(cloudIp,instanceUsesSSL,clientToken){self.disconnect();self.connect(cloudIp,instanceUsesSSL,clientToken);};};Zlbolt.Outputs.MJPEGImageTag.className='MJPEGImageTag';Zlbolt.Outputs.MJPEGImageTag.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){'use strict';if(instanceUsesSSL){var instanceURL="https://"+String(cloudIp);}else{var instanceURL="http://"+String(cloudIp);}
var url=instanceURL+'/stream?x_zl_client_token='+clientToken,navU=window.navigator.userAgent,isAndroidMobile=navU.indexOf('Android')>-1&&navU.indexOf('Mozilla/5.0')>-1&&navU.indexOf('AppleWebKit')>-1,callbackFired=false,_fireCallback;_fireCallback=function(result){if(!callbackFired){console.log('[MJPEGImageTag.isSupported]',result);callbackFired=true;callback(result);}};if(isAndroidMobile){setTimeout(function(){_fireCallback(false);},10);}
setTimeout(function(){_fireCallback(false);},2000);$('<img />').attr('src',url).load(function(){_fireCallback(true);}).error(function(){_fireCallback(false);});};;window.Zlbolt=window.Zlbolt||{};window.Zlbolt.Outputs=window.Zlbolt.Outputs||{};Zlbolt.Outputs.VP9WebSocket=function(zlbolt,options){'use strict';var self=this;var container,video,mediaSource,sourceBuffer,ws;var MAX_FRAME_QUEUE=99;self.maxRetries=10;self.currentBackoff=1000;self.currentFullConnectBackoff=1000;self.maxFullConnectBackoff=30000;self.backoffModifier=2;self.connectionMade=false;self.reconnecting=false;self.recentReconnect=false;self.fullReconnectTimeoutHandle=null;self.allowReconnect=true;self.isConnected=false;self.isConnecting=false;self.isDisconnecting=false;self.isDestroyed=false;self.videoStallDetectorTimerHandle=-1;self.frameQueue=[];self.totalFrames=0;self.hasProcessedHeader=false;self.cloudIp=null;self.instanceUsesSSL=false;self.queueOverflowLog=[];self.nonKeyframeClusters=false;self.frameStats={frameTime:0,fps:0,lastFrameTime:0,filterStrength:5};self.snapshotImage=null;self.initialise=function(){container=options.parent?document.getElementById(options.parent)||document.body:document.body;self.initialiseVideoElement();self.initialiseMediaSource();};self.initialiseVideoElement=function(){video=document.createElement('video');video.width=options.resolution.x;video.height=options.resolution.y;video.style.display='block';video.style.width='100%';video.style.height='100%';video.style.outline=video.style.border='none';video.style['-webkit-user-drag']=video.style['user-drag']='none';video.style['-webkit-user-select']=video.style['user-select']='none';video.style['object-fit']='fill';if(options.streamClass){video.className=options.streamClass;}
self.setupVideoStallDetector();container.appendChild(video);self.streamElement=video;};self.destroyVideoElement=function(){if(video){self.destroyMediaSource();container.removeChild(video);self.streamElement=null;}};self.setupVideoStallDetector=function(){video.addEventListener('timeupdate',self.onTimeUpdate);};self.destroyVideoStallDetector=function(){video.removeEventListener('timeupdate',self.onTimeUpdate);self.clearVideoStallDetectorTimeout();};self.clearVideoStallDetectorTimeout=function(){if(self.videoStallDetectorTimerHandle!==-1){clearTimeout(self.videoStallDetectorTimerHandle);self.videoStallDetectorTimerHandle=-1;}};self.onTimeUpdate=function(){self.clearVideoStallDetectorTimeout();self.videoStallDetectorTimerHandle=setTimeout(function(){console.log('[timeupdate] Video stalled...');try{video.pause();}catch(e){}},3000);};self.initialiseMediaSource=function(){window.MediaSource=window.MediaSource||window.WebKitMediaSource;if(!window.MediaSource){console.log('MediaSource API is not available');}
if(mediaSource){URL.revokeObjectURL(video.src);}
mediaSource=new MediaSource();video.src=window.URL.createObjectURL(mediaSource);var _onSourceOpen=function(e){self.addSourceBuffer();};mediaSource.addEventListener('sourceopen',_onSourceOpen,false);};self.destroyMediaSource=function(){if(mediaSource&&video&&video.src){video.pause();URL.revokeObjectURL(video.src);video.src='';}};self.addSourceBuffer=function(){var _onSourceBufferUpdateEnd=function(e){if(video.paused&&video.buffered.length>0){console.log('[addSourceBuffer] Forcing playback...',video.currentTime,video.paused);video.currentTime=video.buffered.end(video.buffered.length-1);try{video.play().then(function(){self.removeSnapshot();}).catch(function(e){});}catch(e){}}
self.processNextFrame();};if(sourceBuffer){console.log('[addSourceBuffer] Removing existing source buffer.');try{mediaSource.removeSourceBuffer(sourceBuffer);}catch(e){}}
console.log('[addSourceBuffer] Adding source buffer.');sourceBuffer=mediaSource.addSourceBuffer('video/webm; codecs="vp9"');sourceBuffer.mode='sequence';sourceBuffer.addEventListener('updateend',_onSourceBufferUpdateEnd,false);};self.createSnapshot=function(){var canvas,img;if(self.snapshotImage){return;}
canvas=document.createElement('canvas');canvas.width=video.videoWidth;canvas.height=video.videoHeight;canvas.getContext('2d').drawImage(video,0,0,canvas.width,canvas.height);img=document.createElement('img');img.src=canvas.toDataURL();if(!img.width){return;}
self.snapshotImage=$(img).css({'position':'absolute','left':'0','top':'0','width':'100%','height':'100%','-webkit-user-drag':'none','-webkit-user-select':'none','-moz-user-select':'none','user-drag':'none','user-select':'none','pointer-events':'none',}).appendTo(container);};self.onOpen=function(){console.log('[onOpen] Opened connection.');self.isConnecting=false;self.isConnected=true;self.connectionMade=true;self.reconnecting=false;self.allowReconnect=true;if(self.fullReconnectTimeoutHandle){window.clearTimeout(self.fullReconnectTimeoutHandle);}
self.fullReconnectTimeoutHandle=window.setTimeout(function(){self.recentReconnect=false;self.currentFullConnectBackoff=1000;},60000);setTimeout(self.sendStreamConfigHints,250);};self.onMessage=function(e){if(self.isDestroyed){console.warn('[onMessage] Recieved message while destroyed.');return;}else if(self.isDisconnecting){console.warn('[onMessage] Recieved message while disconnecting.');return;}
if(typeof e.data==='string'){self.handleData(e.data);}else{self.handleFrame(e.data);}};self.onError=function(){console.warn('[onError] Error occurred in stream.');};self.onClose=function(event){console.log('[onClose] Closed connection.',event.code,event.reason);const knownCodes={TRY_AGAIN_LATER:1013,UNSUPPORTED_DATA:1003};self.isConnecting=false;self.isConnected=false;self.isDisconnecting=false;if(event.code==knownCodes.UNSUPPORTED_DATA){self.allowReconnect=false;}
self.connectionMade=false;if(!self.reconnecting&&self.allowReconnect){self.currentBackoff=1000;if(!self.recentReconnect){self.retryConnection(10);}else{self.currentFullConnectBackoff*=self.backoffModifier;if(self.currentFullConnectBackoff>self.maxFullConnectBackoff){self.currentFullConnectBackoff=self.maxFullConnectBackoff;}
window.setTimeout(function(){self.retryConnection(10);},self.currentFullConnectBackoff);}}};self.retryConnection=function(retries){self.recentReconnect=true;ws.close();if(retries<=0){console.log('[retryConnection] Maximum retries reached.');return;}
retries--;self.reconnecting=true;console.log('[retryConnection] Retrying connection.');self.connect(self.cloudIp,self.instanceUsesSSL,self.clientToken);window.setTimeout(function(){if(!self.connectionMade){self.currentBackoff*=self.backoffModifier;self.retryConnection(retries);}},self.currentBackoff);};self.destroy=function(){if(self.isDestroyed){console.warn('[destroy] Already destroyed VP9 stream output.');return;}
self.isDestroyed=true;console.log('[destroy] Destroying VP9 stream output.');self.disconnect(false);self.destroyVideoElement();};self.connect=function(cloudIp,instanceUsesSSL,clientToken){var params,proto=instanceUsesSSL?'wss://':'ws://',host;if(self.isConnecting){console.warn('[connect] Already connecting.');return false;}
self.isConnecting=true;self.cloudIp=cloudIp;self.instanceUsesSSL=instanceUsesSSL;self.clientToken=clientToken;self.totalFrames=0;params={'x_zl_client_token':clientToken,'width':options.resolution.x,'height':options.resolution.y};var host=Zlbolt.Outputs._appendPortFragment(options,self.cloudIp,'WEBSOCKET');ws=new WebSocket(proto+host+'/ws?type=vp9&vp9&'+$.param(params));ws.addEventListener('open',self.onOpen);ws.addEventListener('message',self.onMessage);ws.addEventListener('error',self.onError);ws.addEventListener('close',self.onClose);ws.binaryType='arraybuffer';return self._waitForWebSocketConnect(ws);};self.disconnect=function(allowReconnect){if(self.isDisconnecting){console.warn('[disconnect] Already disconnecting...');return;}
if(allowReconnect!==undefined){self.allowReconnect=allowReconnect;}
self.isDisconnecting=true;self.frameQueue.length=0;self.isProcessingFrame=false;self.currentFrame=null;self.hasProcessedHeader=false;self.destroyVideoStallDetector();ws.close();};self._waitForWebSocketConnect=function(ws){var $deferred=$.Deferred();function _cleanUp(){ws.removeEventListener('open',_onOpen);ws.removeEventListener('error',_onError);}
function _onOpen(){_cleanUp();if($deferred.state()=='pending'){$deferred.resolve();}}
function _onError(){_cleanUp();if($deferred.state()=='pending'){$deferred.reject();}}
ws.addEventListener('open',_onOpen);ws.addEventListener('error',_onError);ws.addEventListener('close',_onError);return $deferred.promise();};self.reconnect=function(){if(!self.isConnected){console.warn('[reconnect] Not connected.');return;}else if(self.isConnecting){console.warn('[reconnect] Already connecting.');return;}else if(self.isDisconnecting){console.warn('[reconnect] Already disconnecting...');return;}
ws.addEventListener('close',function(){self.connect(self.cloudIp,self.instanceUsesSSL,self.clientToken);});self.disconnect(false);};self.decodeCmdData=function(data){var split=data.split(':');return{cmd:split[0],args:split.slice(1)};};self.encodeCmdData=function(cmd,args){return[cmd].concat(args).join(':');};self.sendCmdData=function(cmd,args){ws.send(self.encodeCmdData(cmd,args));};self.sendCameraMousePos=function(pos){self.sendCmdData('SETCAMMOUSEPOS:'+pos.join(':'));};self.handleData=function(data){try{var cmdData=self.decodeCmdData(data);if(cmdData.cmd=='PING'){zlbolt.streamMetrics.pingIndex=parseInt(cmdData.args[0]);zlbolt.streamMetrics.frameDelay=parseInt(cmdData.args[1]);zlbolt.streamMetrics.lastPing=parseInt(cmdData.args[2]);zlbolt.streamMetrics.targetFPS=parseInt(cmdData.args[3]);zlbolt.streamMetrics.connectionQuality=(cmdData.args.length>=5?parseInt(cmdData.args[4]):'N/A');zlbolt.streamMetrics.currentRendererFPS=(cmdData.args.length>=7?parseFloat(cmdData.args[6]):'N/A');zlbolt.streamMetrics.currentEncoderFPS=(cmdData.args.length>=6?parseFloat(cmdData.args[5]):'N/A');zlbolt.streamMetrics.currentClientFPS=self.frameStats.fps;zlbolt.streamMetrics.outputMethod=Zlbolt.Outputs.VP9WebSocket.className;zlbolt.streamMetrics.outputResolution=(cmdData.args.length>=8?cmdData.args[7]:'N/A');zlbolt.onStreamMetricsUpdated&&zlbolt.onStreamMetricsUpdated(zlbolt.streamMetrics);}else if(cmdData.cmd=='SETCONFIG'){console.log('[handleData] SETCONFIG: ',cmdData.args[0],'=',cmdData.args[1]);switch(cmdData.args[0]){case'allow_non_kf_clusters':self.nonKeyframeClusters=cmdData.args[1]=='true';break;default:console.warn('[handleData] SETCONFIG: Unknown key:',cmdData.args[0]);}}else if(cmdData.cmd=='VERSION'){zlbolt.cameraMoveFast=true;console.log('Plugin supports Web Socket camera movement messages.');}}catch(e){console.warn('[handleData] ',e);}};self.forceImageChanging=function(duration){self.sendCmdData('IMAGECHANGING',[duration]);}
self.updateOutputResolution=function(width,height){self.sendCmdData('RESIZE',[width,height]);video.width=width;video.height=height;};self.handleFrame=function(frameData){self.totalFrames++;zlbolt.streamMetrics.frameSize=String(Math.round(frameData.byteLength/1024))+' KiB';zlbolt.streamMetrics.totalFrames=self.totalFrames;zlbolt.streamMetrics.frameSize=String(Math.round(frameData.size/1024))+' KiB';self.frameQueue.push(frameData);if(self.frameQueue.length>10&&self.hasProcessedHeader){self.incQueueOverflowErrors();}
if(self.frameQueue.length>MAX_FRAME_QUEUE&&self.hasProcessedHeader){self.frameQueue.splice(0,Math.max(0,self.frameQueue.length-MAX_FRAME_QUEUE));console.warn('[handleFrame] Frame queue overflow. Skipping frames.');}
self.processNextFrame();};self.sendStreamConfigHints=function(){function _getChromeVersion(){var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);return raw?parseInt(raw[2],10):false;}
if(_getChromeVersion()>=50){console.log('[sendStreamConfigHints] Requesting non-keyframe clusters...');self.sendCmdData('SETCONFIG',['allow_non_kf_clusters','true']);}};self.incQueueOverflowErrors=function(){var i,maxOverflowErrors=20,errorTimeFrame=5000,now=Date.now(),timeout=now-errorTimeFrame;self.queueOverflowLog.push(now);for(i=self.queueOverflowLog.length;i>=0;i--){if(self.queueOverflowLog[i]<timeout){self.queueOverflowLog.splice(i,1);}}
console.warn('[handleFrame] Frame queue filling up (Q: '+self.frameQueue.length+'). Stream may not be sufficiently stable ('+self.queueOverflowLog.length+'/'+maxOverflowErrors+' in '+(errorTimeFrame/1000)+'s).');if(self.queueOverflowLog.length>maxOverflowErrors){self.fallBackToMJPEG();}};self.processNextFrame=function(){if(self.frameQueue.length<=0||!sourceBuffer){return;}
if(sourceBuffer.updating){}else{let currentFrame=self.frameQueue.splice(0,1)[0];self.appendFrameToSourceBuffer(currentFrame);}};self.removeSnapshot=function(){var $img=self.snapshotImage;if($img){$img.fadeOut(500,function(){$img.remove();self.snapshotImage=null;});}};self.reinitialise=function(){self.createSnapshot();self.reconnect();self.initialiseMediaSource();};self.appendFrameToSourceBuffer=function(data){if(self.isDestroyed){console.warn('[appendFrameToSourceBuffer] Trying to append frame when VP9 stream output is destroyed.');return;}else if(!self.isConnected||self.isDisconnecting){console.warn('[appendFrameToSourceBuffer] Trying to append frame when VP9 stream output is not connected.',self.isConnected,self.isDisconnecting);return;}
try{sourceBuffer.appendBuffer(data);self.hasProcessedHeader=true;self.updateFrameRate(self.frameStats);}catch(e){switch(e.name){case'QuotaExceededError':console.warn('[appendFrameToSourceBuffer] QuotaExceededError! Trimming buffer.');var bufferStart=sourceBuffer.buffered.start(0);var removeEnd=video.currentTime-1;if(removeEnd>bufferStart){sourceBuffer.remove(bufferStart,removeEnd);}
break;case'InvalidStateError':console.warn('[appendFrameToSourceBuffer] InvalidStateError! Restarting connection.',e);self.reinitialise();break;default:throw e;}}};self.updateFrameRate=function(stats){var now=Date.now(),curFrameTime;if(stats.lastFrameTime<=0){stats.lastFrameTime=now;}
curFrameTime=now-stats.lastFrameTime;stats.frameTime+=(curFrameTime-stats.frameTime)/stats.filterStrength;stats.lastFrameTime=now;stats.fps=Math.round(1000/stats.frameTime*10)/10;};self.fallBackToMJPEG=function(){console.warn('[fallBackToMJPEG] Falling back to MJPEG stream.');zlbolt.changeStreamOutput(Zlbolt.Outputs.MJPEGCanvas2DWebSocket);};};Zlbolt.Outputs.VP9WebSocket.className='VP9WebSocket';Zlbolt.Outputs.VP9WebSocket.isSupported=function(zlbolt,cloudIp,instanceUsesSSL,clientToken,options,callback){'use strict';var ws,mediaSource,sourceBuffer,video,result=false,callbackFired=false,_fireCallback,_onMessage,_createWebSocket,_createMediaSource,_createVideoElement,_detectChromeAndroid;_fireCallback=function(result,reason){if(!callbackFired){console.log('[VP9WebSocket.isSupported] ',result,'->',reason||'N/A');callbackFired=true;callback(result);}};_createVideoElement=function(){video=document.createElement('video');if(!video.canPlayType||''===video.canPlayType('video/webm; codecs="vp9"')){throw Error('Unsupported codec.');}};_createMediaSource=function(){if(!window.MediaSource){throw Error('MediaSource not supported.');}else if(!(window.chrome&&window.navigator.vendor==='Google Inc.')){throw Error('Currently, only Google Chrome (or compatible) is supported.');}else if(!MediaSource.isTypeSupported('video/webm; codecs="vp9"')){throw Error('VP9 not supported with MSE in this browser?');}
var _onSourceOpen=function(e){try{sourceBuffer=mediaSource.addSourceBuffer('video/webm; codecs="vp9"');sourceBuffer.addEventListener('error',function(){console.debug('[_onSourceOpen] Source buffer error.');_fireCallback(false,'MediaSource error');},false);sourceBuffer.addEventListener('abort',function(){console.debug('[_onSourceOpen] Source buffer aborted.');_fireCallback(false,'MediaSource error');},false);}catch(err){console.debug('[_onSourceOpen] Error while adding source buffer.');_fireCallback(false,'MediaSource error');}};mediaSource=new MediaSource();mediaSource.addEventListener('sourceopen',_onSourceOpen,false);video.src=URL.createObjectURL(mediaSource);};_onMessage=function(e){if(typeof e.data!=='string'){var isValidHeader=e.data.size>0&&e.data.size<255;_fireCallback(isValidHeader,(isValidHeader?'Valid':'Invalid')+' WebM header');ws.close();}};_createWebSocket=function(){var instanceURL;if(!window.WebSocket){throw Error('WebSocket not supported.');}
var host=Zlbolt.Outputs._appendPortFragment(options,cloudIp,'WEBSOCKET');if(instanceUsesSSL){instanceURL="wss://"+String(host);}else{instanceURL="ws://"+String(host);}
ws=new WebSocket(instanceURL+'/ws?vp9&x_zl_client_token='+clientToken);ws.onmessage=_onMessage;ws.onclose=function(){_fireCallback(false,'WebSocket closed');};ws.onerror=function(){_fireCallback(false,'WebSocket error');};};_detectChromeAndroid=function(){var ua=navigator.userAgent.toLowerCase(),isAndroid=ua.indexOf('android')!==-1,isChrome=ua.indexOf('chrome')!==-1;if(isAndroid&&isChrome){throw Error('Android Chrome is currently not supported.');}};try{_detectChromeAndroid();_createVideoElement();_createMediaSource();_createWebSocket();}catch(e){console.debug('[_createWebSocket] Error, or not supported.');_fireCallback(false,String(e));}
setTimeout(function(){_fireCallback(false,'Checks timed out');},8000);};;window.Zlbolt=window.Zlbolt||{};Zlbolt.carline={"a1":{"offset":{"x":0.000,"y":-0.267,"z":-1.197},"doors":"3door","script":"a1"},"a1sb":{"offset":{"x":0.000,"y":-0.267,"z":-1.197},"script":"a1"},"s1":{"offset":{"x":0.000,"y":-0.267,"z":-1.197},"doors":"3door","script":"a1"},"s1sb":{"offset":{"x":0.000,"y":-0.267,"z":-1.197},"script":"a1"},"a3":{"offset":{"x":0.000,"y":-0.300,"z":-1.217},"doors":"3door","script":"a3"},"a3cabrio":{"offset":{"x":0.000,"y":-0.274,"z":-1.262},"doors":"3door","script":"a3cabrio"},"s3cabrio":{"offset":{"x":0.000,"y":-0.274,"z":-1.262},"doors":"3door","script":"a3cabrio"},"a3limo":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"a3limochina":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"a3sb":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sb_alt":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sbgtron":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sbgtron_standard":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sbchina":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sbetron":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a3sbetron_standard":{"offset":{"x":0.000,"y":-0.300,"z":-1.262},"script":"a3"},"a4":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"a4aq":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"a4avant":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"a4avantgtron":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"a4l":{"offset":{"x":0.000,"y":-0.323,"z":-1.229},"script":"a4"},"a4limo":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"a5cabrio":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5cabrio"},"a5coupe":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5"},"a5":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5"},"a5sb":{"offset":{"x":0.000,"y":-0.325,"z":-1.201},"script":"a5"},"a5sbgtron":{"offset":{"x":0.000,"y":-0.325,"z":-1.201},"script":"a5"},"a6":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"a6avant":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"a6l":{"offset":{"x":0.000,"y":-0.322,"z":-1.296},"script":"a6"},"a6limo":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"a6limohybrid":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"a7":{"offset":{"x":0.000,"y":-0.325,"z":-1.249},"script":"a7"},"a7sb":{"offset":{"x":0.000,"y":-0.325,"z":-1.249},"script":"a7"},"a8":{"offset":{"x":0.000,"y":-0.325,"z":-1.284},"script":"a8"},"a8hybrid":{"offset":{"x":0.000,"y":-0.325,"z":-1.284},"script":"a8"},"a8l":{"offset":{"x":0.000,"y":-0.325,"z":-1.349},"script":"a8"},"a8lhybrid":{"offset":{"x":0.000,"y":-0.325,"z":-1.349},"script":"a8"},"a8w12":{"offset":{"x":0.000,"y":-0.325,"z":-1.349},"script":"a8"},"aaq":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"q3":{"offset":{"x":0.000,"y":-0.348,"z":-1.244},"script":"q3"},"q3china":{"offset":{"x":0.000,"y":-0.348,"z":-1.244},"script":"q3"},"q5":{"offset":{"x":0.000,"y":-0.294,"z":-1.197},"script":"q5"},"q5china":{"offset":{"x":0.000,"y":-0.294,"z":-1.197},"script":"q5"},"q5hybrid":{"offset":{"x":0.000,"y":-0.294,"z":-1.197},"script":"q5"},"q7":{"offset":{"x":0.000,"y":-0.400,"z":-1.489},"script":"q7"},"q7etron":{"offset":{"x":0.000,"y":-0.400,"z":-1.489},"script":"q7"},"sq7":{"offset":{"x":0.000,"y":-0.400,"z":-1.489},"script":"q7"},"q7_v12":{"offset":{"x":0.000,"y":-0.400,"z":-1.489},"script":"q7"},"q7v12":{"offset":{"x":0.000,"y":-0.400,"z":-1.489},"script":"q7"},"r8":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8"},"r8_v10":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8"},"r8_v10_spyder":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8spyder"},"r8spyder":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8spyder"},"r8spyderrws":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8spyder"},"r8v10":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8"},"r8rws":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8"},"r8v10spyder":{"offset":{"x":0.000,"y":-0.160,"z":-1.267},"doors":"3door","script":"r8spyder"},"rs3":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"rs3sb":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"rs3limo":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"rs4avant":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"rs5cabrio":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5cabrio"},"rs5coupe":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5"},"rs6avant":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"rs6avantperformance":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"rs7sb":{"offset":{"x":0.000,"y":-0.325,"z":-1.249},"script":"a7"},"rs7sbperformance":{"offset":{"x":0.000,"y":-0.325,"z":-1.249},"script":"a7"},"rsq3":{"offset":{"x":0.000,"y":-0.348,"z":-1.244},"script":"q3"},"rsq3performance":{"offset":{"x":0.000,"y":-0.348,"z":-1.244},"script":"q3"},"s3":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"doors":"3door","script":"a3"},"s3limo":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"s3sb":{"offset":{"x":0.000,"y":-0.287,"z":-1.235},"script":"a3"},"s4avant":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"s4limo":{"offset":{"x":0.000,"y":-0.325,"z":-1.196},"script":"a4"},"s5cabrio":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5cabrio"},"s5coupe":{"offset":{"x":0.000,"y":-0.325,"z":-1.172},"doors":"3door","script":"a5"},"s5sb":{"offset":{"x":0.000,"y":-0.325,"z":-1.201},"script":"a5"},"s6avant":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"s6limo":{"offset":{"x":0.000,"y":-0.322,"z":-1.246},"script":"a6"},"s7sb":{"offset":{"x":0.000,"y":-0.325,"z":-1.249},"script":"a7"},"s8":{"offset":{"x":0.000,"y":-0.325,"z":-1.284},"script":"a8"},"s8plus":{"offset":{"x":0.000,"y":-0.325,"z":-1.284},"script":"a8"},"sq5":{"offset":{"x":0.000,"y":-0.294,"z":-1.197},"script":"q5"},"ttcoupe":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttcoupe"},"ttroadster":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttroadster"},"ttrscoupe":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttcoupe"},"ttrsroadster":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttroadster"},"ttscoupe":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttcoupe"},"ttsroadster":{"offset":{"x":0.000,"y":-0.289,"z":-1.192},"doors":"3door","script":"ttroadster"},"Innotrans":{"offset":{"x":0.000,"y":0.000,"z":0.000},"script":"Innotrans"}};;window.Zlbolt=window.Zlbolt||{};Zlbolt.buildOverlay=function(){var htmlDump=function(spriteSheet,button_padding){var menu_env_height=button_padding?99:96;var menu_anim_height=button_padding?66:64;var padding_class_string=button_padding?"padded":""
var html='<div id="zl-overlay">';html+='<ul id="zl-overlay-main-buttons-list">';html+='<li id="zl-envir-main-button" class="zl-main-button envir">';html+='<ul class="zl-sub-buttons-list" style="height: '+menu_env_height+'px;">';html+='<li id="zl-envir-IV" class="zl-sub-button envir Iceland_Void '+padding_class_string+'"></li>';html+='<li id="zl-envir-TE" class="zl-sub-button envir Tunnel_Env '+padding_class_string+'"></li>';html+='<li id="zl-envir-WV" class="zl-sub-button envir WhiteVoid '+padding_class_string+'"></li>';html+='</ul>';html+='</li>';html+='<li id="zl-anim-main-button" class="zl-main-button anim">';html+='<ul class="zl-sub-buttons-list" style="height: '+menu_anim_height+'px;">';html+='<li id="zl-anim-D" class="zl-sub-button anim Doors '+padding_class_string+'"></li>';html+='<li id="zl-anim-T" class="zl-sub-button anim Trunk '+padding_class_string+'"></li>';html+='</ul>';html+='</li>';html+='</ul>';html+='</div>';html+='<style>';html+='#zl-overlay {';html+='position: absolute;';html+='height: 0;';html+='width: 0;';html+='}';html+='#zl-overlay-main-buttons-list {';html+='position: relative;';html+='bottom: 47px;';html+='left: 5px;';html+='padding: 5px;';html+='margin: 0;';html+='height: 32px;';html+='width: 120px;';html+='z-index: 10;';html+='list-style: none;';html+='}';html+='.zl-main-button {';html+='margin-right: 10px;';html+='float: left;';html+='width: 32px;';html+='height: 32px;';html+='cursor: pointer;';html+='display: block;';html+='z-index: 12;';html+='list-style: none;';html+='background-position: -224px 0px;';html+='background-image: url("'+spriteSheet+'");';html+='}';html+='.zl-main-button.envir {';html+='background-position: -32px 0px;';html+='}';html+='.zl-main-button.envir.hover {';html+='background-position: -32px -32px;';html+='}';html+='.zl-main-button.anim {';html+='background-position: 0px 0px;';html+='}';html+='.zl-main-button.anim.hover {';html+='background-position: 0px -32px;';html+='}';html+='.zl-sub-buttons-list {';html+='position: absolute;';html+='bottom: 37px;';html+='float: left;';html+='padding: 0;';html+='display: none;';html+='margin: 0;';html+='height: 200px;';html+='width: 32px;';html+='z-index: 10;';html+='list-style: none;';html+='}';html+='.zl-sub-button {';html+='margin-right: 10px;';html+='float: left;';html+='width: 32px;';html+='height: 32px;';html+='cursor: pointer;';html+='display: block;';html+='z-index: 11;';html+='list-style: none;';html+='background-image: url("'+spriteSheet+'");';html+='}';html+='.zl-sub-button.padded {';html+='margin-top: 1px;'
html+='}';html+='.zl-sub-button.envir.Iceland_Void {';html+='background-position: -128px 0px';html+='}';html+='.zl-sub-button.envir.Iceland_Void.hover {';html+='background-position: -128px -32px';html+='}';html+='.zl-sub-button.envir.Tunnel_Env {';html+='background-position: -160px 0px';html+='}';html+='.zl-sub-button.envir.Tunnel_Env.hover {';html+='background-position: -160px -32px';html+='}';html+='.zl-sub-button.envir.WhiteVoid {';html+='background-position: -192px 0px;';html+='}';html+='.zl-sub-button.envir.WhiteVoid.hover {';html+='background-position: -192px -32px;';html+='}';html+='.zl-sub-button.anim.Doors {';html+='background-position: -64px 0px;';html+='}';html+='.zl-sub-button.anim.Doors.hover {';html+='background-position: -64px -32px;';html+='}';html+='.zl-sub-button.anim.Trunk {';html+='background-position: -96px 0px;';html+='}';html+='.zl-sub-button.anim.Trunk.hover {';html+='background-position: -96px -32px;';html+='}';html+='</style>';html+='<script>';html+='$( "#zl-envir-main-button" ).click(function() {';html+='$( this ).children().fadeToggle(200);';html+='$( this ).toggleClass("click");';html+='$( "#zl-anim-main-button" ).children().fadeOut(200);';html+='}).mouseover(function() {$( this ).addClass("hover");})';html+='.mouseout(function() {$( this ).removeClass("hover");});';html+='$( "#zl-anim-main-button" ).click(function() {';html+='$( this ).children().fadeToggle(200);';html+='$( this ).toggleClass("click");';html+='$( "#zl-envir-main-button" ).children().fadeOut(200);';html+='}).mouseover(function() {$( this ).addClass("hover");})';html+='.mouseout(function() {$( this ).removeClass("hover");});';html+='$( "#zl-anim-D" ).click(function(e) {';html+='zlbolt.triggerAnimation("Doors");';html+='}).hover(function(e) {e.stopPropagation(); $( this ).toggleClass("hover");})';html+='.mouseover(function() {$( "#zl-anim-main-button" ).removeClass("hover");});';html+='$( "#zl-anim-T" ).click(function(e) {';html+='zlbolt.triggerAnimation("Trunk");';html+='}).hover(function(e) {$( this ).toggleClass("hover");})';html+='.mouseenter(function(e) {e.stopPropagation(); $( "#zl-anim-main-button" ).removeClass("hover");});';html+='$( "#zl-envir-WV" ).click(function(e) {';html+='zlbolt.switchEnvironment("WhiteVoid");';html+='}).hover(function(e) {e.stopPropagation(); $( this ).toggleClass("hover");})';html+='.mouseover(function() {$( "#zl-envir-main-button" ).removeClass("hover");});';html+='$( "#zl-envir-TE" ).click(function(e) {';html+='zlbolt.switchEnvironment("Tunnel_Env");';html+='}).hover(function(e) {e.stopPropagation(); $( this ).toggleClass("hover");})';html+='.mouseover(function() {$( "#zl-envir-main-button" ).removeClass("hover");});';html+='$( "#zl-envir-IV" ).click(function(e) {';html+='zlbolt.switchEnvironment("Iceland_Void");';html+='}).hover(function(e) {e.stopPropagation(); $( this ).toggleClass("hover");})';html+='.mouseover(function() {$( "#zl-envir-main-button" ).removeClass("hover");});';html+='</script>';return html;}
var attachOverlay=function($parent,spriteSheet){var spriteSheet=spriteSheet||'img/extra-buttons/alternate_sheet.png';var button_padding=spriteSheet==='img/extra-buttons/alternate_sheet.png'?true:false;spriteSheet=zlbolt.assetURL(spriteSheet);var $html=$(htmlDump(spriteSheet,button_padding));$html.appendTo($parent);};return attachOverlay;}();;